{"_id":"postgres","_rev":"60-bb850c6e0ca1fde1bfbc953969c56f72","name":"postgres","dist-tags":{"beta":"3.0.0-rc.3","latest":"3.4.7"},"versions":{"0.0.1":{"name":"postgres","version":"0.0.1","author":{"name":"Ryan Dahl"},"_id":"postgres@0.0.1","dist":{"shasum":"93aecd0a7fcf620792bcc2c87a2ead432adaa833","tarball":"https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz","integrity":"sha512-QxFFD2rCs06M2zxu/mflP5vguu1XYy/A9qcifRsQPUiOdB0thkAR2kE3ET8GvCh+kiUaJL1gCgvvE/ZU3a/XGw==","signatures":[{"sig":"MEQCIEQnSCnDt7wTHNA59gYqIocT9VNINswiBNlUzLCKfnZYAiB7mxD8K1chRnIqpQKNBWI6+iuXosEkeeMA7VMQ/XJJpw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"./postgres","engines":{"node":"*"},"scripts":{"install":"node-waf configure build"},"_npmVersion":"0.2.7-2","description":"very basic libpg binding to node","directories":{},"_nodeVersion":"v0.3.1-pre","_nodeSupported":true},"1.0.0":{"name":"postgres","version":"1.0.0","keywords":["driver","postgresql","postgres.js","postgres","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"WTFPL","_id":"postgres@1.0.0","maintainers":[{"name":"ry","email":"ry@tinyclouds.org"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"9d0dbb3e466949ea153389c28a87673a1f296d1d","tarball":"https://registry.npmjs.org/postgres/-/postgres-1.0.0.tgz","fileCount":10,"integrity":"sha512-ZM0QkDcknv3xROtBSN7esbEhFsbmpmt8PrPbhlLbgJ1D443Wjz5ZEPxHT9R2uUov6PjCd6z2yLruaay2+56gdA==","signatures":[{"sig":"MEUCIGTRMkMpjGgAEMLNAar6lxK2o0adQqxgdKvei4q2ZQOmAiEA0Yx21XSFgpmeluIU16BbdooGb0ykWBYmK4Alt81zAl4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":47506,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd/58qCRA9TVsSAnZWagAAgw0P/0A79//omMwYzYRpVfO6\nD27yJ3qr4kLMCITMntuW91AHupACtmTWQsS6/CrKjC1ajChRDJMnnioHepRd\nIytI1GEYTRsQawSfn5XUP9R4+SuG+v5biDkkVExF5OMZuIo9ME7QN+8fGTFb\nxaKoZhlLp1PotPJoQWfmIwsm/cXw+7PigBTp1BfK1NSXHgZTir9jphuHdRSw\n6mb7FBZ+ZJup7qZAWZILkQdeyRYeXV++7XAKN48Cr4ulXtXOL0VSkKW+hBbY\ncCTfs6GBGf3eyuSaVcKzwtNErKrzPMeRMwHIHOyAG8WQ3pS/8WuIN+JHlynO\nkIbTx1E0mdcRTWqwvF58aS7o2DDaBci8zrix+sYhAYfo3ZkV3ZxODLEVvoeQ\ntqhRXeIxpSRJZL5Pq+mmGyYWzIxFHXLIGB4zIKNkOPJ5dtOgYx4h0usqfYpr\nHqygFSPZNf15uUs9/AAhXbf0lI6z722fV0lw2yoQ2C/6lzeEpNh6xjLR0t1t\nTXpBaP6rV2C1tY7rdGeWAoVEtYe55q0MB8R16sTU7vFV6Ctqje1sKrML9klJ\nd6H2fLo0Qz/YfH8ic16T1hhBibYvYRuFKsfENT7S1+AZmYufLIJfEY1U88RW\nlDGYbZwzP7Qyw94GaJHOQgflsfga8d2NNoVTGDwVNnbvQ86+S/XYuYJWYDhL\nRAdr\r\n=NYRO\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","gitHead":"2f277bc7948f74c443f1353e5347e95874aab886","scripts":{"lint":"eslint lib","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.13.4","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"12.14.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_1.0.0_1577033514130_0.2892305410547735","host":"s3://npm-registry-packages"}},"1.0.1":{"name":"postgres","version":"1.0.1","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"WTFPL","_id":"postgres@1.0.1","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"21415a27eb4de84678f544ef2d9e5a7a2a7dc734","tarball":"https://registry.npmjs.org/postgres/-/postgres-1.0.1.tgz","fileCount":10,"integrity":"sha512-5wcCs4awzSOtgmqIXr4vLIbrftcGJ+INATDuDGZmbQU8QY71tXA+eWkPqew7o2FWH0WtxGnA+mbSVFKz3Hvpmw==","signatures":[{"sig":"MEYCIQCZYoKkidputEMNkHxrQJQxRdUapt60lfv78Z3g4CNXUwIhAKqbky0lZ99hv/U1LUTFZlH4/qJdFTaAqIkJ/k/izrxx","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":48351,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeD120CRA9TVsSAnZWagAACd4P/0eszplj7JEKlNpVSThd\nvtQfjYjkHqg0/nDEUY1VE5cj4VSJhlPF5cKPzsD1eYNlZixjEdJm3LTv5s2t\nR2k1CbroxgxtYMr/d64lSqSTqrZ6mC9pKzrPr9tUOLt57NvXxI8KFGQBH9dd\nCblLvwHV+c2sFVYkbO5UC0LZgK/44/FVYxZgjgaFAK//dYOKX79KFsKtQcvo\nfZRYUNzu6mNUJrLGgup110rciU0rNZxrzKujIasoDutRYd5Fz8+C/pzaIBtA\n+0Q068saxwChSj4MH8fGbu74g52JksqtxOpQu9S3y53SxXFS3DJns8ne6VlT\nWffJWeL57xEim+JIbfmSMRTe2r2uED+WmSZnzqdnIMOMpLMQ74M2p6XlVicE\nNPNy+YlM7r4wMQEt4ZrLlHXTEtqZlGXAgS/nfB4kes+g6fAwOcn7iv9eGatw\n+hVgQY908aFKx/OEz3L4VLa1RUpujFe/jK2wn2unIDjT7TNTnG3GaqY8LGrM\ndtkAvmzqOeoY6tiTMsM9z/i6t3jsu7oP6aaaW6JmyE5L3xTNXGrAIa2yu43e\nqOJROxQMEXONfUbJW5wpwuxjvQaDtbheu6+O7QCO/uf1qNaTSxH9/zXEC6Gw\nBnqGsJwUEbm7OTQqFOCupxaEOGVlFEQ1bUHNhCJeFDLp77aYFfVZOLbKgPQT\n2cG4\r\n=qZEr\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","gitHead":"d98c139539a16fe0a4157270e72890db664b72dd","scripts":{"lint":"eslint lib","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.13.4","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"12.14.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_1.0.1_1578065331911_0.4273669787531975","host":"s3://npm-registry-packages"}},"1.0.2":{"name":"postgres","version":"1.0.2","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"WTFPL","_id":"postgres@1.0.2","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"7b9f6769934f727cec0f1d7ef58d4915a327f5dd","tarball":"https://registry.npmjs.org/postgres/-/postgres-1.0.2.tgz","fileCount":10,"integrity":"sha512-zeLgt42KSUNgX/uvo+gbVxTAYwgSY6MIKuU/a8YWuObX4rtGuKrVWopvEAqIAPSO0FeHS1TsSKnqPjoufPy8NA==","signatures":[{"sig":"MEUCIQDYytdr21bvZptqOF51u87Ib7jrtPc1ZsR3bR/jbty0xgIgaDHj+I3x2BvMyba6rMweHRqi1zxyVdvMVP4NA/+JCCI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":51937,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeJ1/eCRA9TVsSAnZWagAAaCYP/3Fvwc+0AwT6xCxVOzHs\nP3xe7KkS6GnyNFEcuIAWCIuwPnCrMVyXSbQ40rX68RT93z4HXAYcPB8io48g\njWKlKfUunX6YUt2YFgwusIBvHDuWkB2zCP1Uwe6cedewGk0GgbJW4yAq6id/\n5JzC4Fi/JnIHwDhoo3FdS1jQHnGcQ+9gpwIHkXO6vXl44D+0kjVGgPC4hhj5\nxPpl3alYnW8agDhtlLDJZ9nFJFYIabVRYj3rg1nfTGEpaLGZn+QZLY7pvE/3\nTErAgLMQIBNAkdWb6w6jN4xeoRQV1t79cWaISBcrQ8JJu/oeLTFiWknqtXms\naV1s8HNVWlsuenBtStXcdC57t/PPqgXvQ64etLTVWEz9SAXqOcIpfUcLlfYO\n14PJXGuO8bGKAGk8n6hA+qqUqSmSDJECB7eYltM45dSal4aqLqrXzp/ghVZK\n20zUPhfIAazVJ3gSU74AwDa8sP7U5Gtk3OSrOADQF+8OxAgOpKYxw0KMyTIb\ncqNAcy3ZiN6LiFatDfGLnhLFgnhI4/Pha0saVJHuSux5yGduYVXaF7khB4kX\nSaolWBeSycFHcOWELqrLMKEyFSH9ZkNTQa9euF4MOP8ruKhDL55M0y2RhI/4\nKss9uUTaxUX9VqKoi63aLmZZLZV22Hr060TcQtho/95mXS7gwoFqYM9auRFg\nvzC5\r\n=vL8g\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","gitHead":"d0c63f1db3ff29fdac12d6cbd833e7789cdc81a5","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.13.4","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"12.14.1","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_1.0.2_1579638750464_0.4668689072747485","host":"s3://npm-registry-packages"}},"2.0.0-beta.0":{"name":"postgres","version":"2.0.0-beta.0","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.0","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"0c0405fd4944d60d94ca229bb960dec13b904184","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.0.tgz","fileCount":13,"integrity":"sha512-1VzJ2ClvMJ8NaSdrDPp5K3g4VABNCiZCcdfqSfEPFC4WSWq8SR4mXSb3p3R2FijRA7gtCnPn1h7iQsplLS+u/A==","signatures":[{"sig":"MEYCIQCV1WCicOVBX6ewkT56dHdG5tBhNgzP2n8/XHz1vA8DXwIhAOaSdCSlehJ39tPkS5iWx+ttI9nuMWx8HqTnTAeNtyVh","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":73458,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe5g4lCRA9TVsSAnZWagAApx4P/3xh6K+x2nr0b6mT6we2\ncZOFMU/Hve8qlmWz9TyOyKCk41dZQUPbpZVco960d/mXcHlChNAjoQu9okCE\nVXGlSJnWSgclZAjyW4QNn7rqkG1ZOSqethJjxhQ11fFE236t9ohlpLVaDXQK\nPJi0XL/M23nrO1QsWfg5g8hpGg8U8IVQ1b1oHhCRq1HFxqNvSh8a+whQlDa0\nRiGIgra+c9RZfol0xHnDtknHIIpZr0rEZ+nimGencbtQkZiAMszC6raLq4Tu\nYJ7522wFLFM8KWd95ISqk/bbD5QU2yUtg7jBD4AYkNscTh2hrgpBKk3AVnAI\nisbyUBN3DnH03cp5gJRv7Gm6a5ugPxs6/KZhZo10wIQULJ7AKdV0dTSWGpdz\n9s6nU8Qs2FH+eeJ7FDzUg1VY/9i2GbV27M9PDoKTypk9fFVcQ/hx/+Nk8oBZ\nImqOyt/1RLOPINEwO8seG2PZs4btrq9xEbkUg/zmhtfXIf2JbbLzimc5Fsx9\nZO9VR3x9kf8APpv9Q5uIMaeqwVvvOS/q44atPRM1q1CK7gBDJvQjJHV9UHZu\nO1VB++CGZr8jCXdCj4votAU84suoSsS1kbMUFXT37gYkWaCsuL2/PuLFevph\n98XcycpgZ23E7W4QFlGUB5inGbPEvl7VSkYZbvubJhFADdgaFt6hanlTFhtI\nR7FY\r\n=bTVX\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"889a0caa09e983c77ed91a8d6e3b35fd24cbd567","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.4","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"12.16.3","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.0_1592135204454_0.9856427830656189","host":"s3://npm-registry-packages"}},"2.0.0-beta.1":{"name":"postgres","version":"2.0.0-beta.1","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.1","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"992b2a44d66b0ad52200deb100a1660099394cce","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.1.tgz","fileCount":13,"integrity":"sha512-fwc7WZ1i7uWS5KtkXljRpUvb9NVstmDFY/LfGMpo8W4iTAB74BpPeMkvXkSRHIineWmFbjiwk7qJh9RWoSnX/g==","signatures":[{"sig":"MEUCIQDoJV7KGlkYAPD6MPk+QH/wbAFaISP48X3qyieJpgXERQIgMDpJcETx466B0uTLUo+mNZWbFmerhvgrSXpO+q6Z398=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":74249,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfcvYICRA9TVsSAnZWagAAVIsP/AjqUfvyKGeKCey11JHS\nv3pdH09IAPTpA/PIIBA28ldmF870vGuUvcbhSwTKRDFrQu0V/sq6NAW2WdKZ\nPrsavaywO/2hWbunM96Uyge351T7i7W3ro9fsiBpKbZH+ALf/Yx/Zbkl5dba\nYbI8wcx4hatIymIHNZIVjWLfUZ/UCmO1q+FlEEqVjJvgJ8gtNPzys/4qegeM\nFa/NF+osZwBLt8m1jD0sW05cRx15/1ZkfN7ZvxOQkk0enLWO86+VtoPPiGFz\n0HeaFtgtufyGLRNzXBROEYGbH422FswWpc2BcKjVODO0hep86JFCS7NIZKvK\nmLpLFTLTcudAIEak/CnOH7Nu9ZjjXV8lwYthIJ0FpBUvX8sKvzSw+v3LVl+8\nlKbAdnehBnpQGEhrwHv9jrFXkP0/DjuKtEjsuOzlvGs3xAuzju7Ka44uSpGz\nIDe7mgbNo0ZuY47tOi/l75FACytZylhELBWSOKzBpxzFPd1LEWeIjgk+m8bX\nCLODrrPE36hbSjdK9t8agn8tqylVjtfOMy9TaQh5afDbwtW6gcFbUoSp2+KD\n/pWZbKMRoagJWv6ZbP/NXWadS8qhYptN5WLNKlELg/9VZ1eM1KZ1urvIJ9Ge\n8mBh6IfEuLcWA9z2WzjXsf7URF2EF8MkG6sHci5/KgGTQJaTNaoNGF+lggfA\ni+Ea\r\n=4cND\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"c9c663226db87aaf170c10f32ee124667c89feea","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.8","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"14.11.0","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.1_1601369607785_0.4589777838004725","host":"s3://npm-registry-packages"}},"2.0.0-beta.2":{"name":"postgres","version":"2.0.0-beta.2","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.2","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"4844381137b6394a66c4c7566aedb63392ffe416","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.2.tgz","fileCount":13,"integrity":"sha512-x5/FBSLsU/eVeKcIREsaCBeFp5CFbZoberSug3dgsJMlvWwGBtl753hALBVR+GJ5Dty1lb+zfqV9ySHyOndypA==","signatures":[{"sig":"MEYCIQCxV9TVT2SVWbBUzgyZNOjU4O+tZMqds6OLomeu351Y8QIhANcXylZyj0R0RmR8CF7T6YAnc14xg5bc0w9JElseVXn6","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":74387,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfdy5sCRA9TVsSAnZWagAAn3UP/0aRSGMi0dG5E8U1F2ob\nBsHckJjcca+MDKTtderSpIxZBnsbHsF/mWf6r1GGs/vyhcI7+GKf4DF9Pjnp\nMNx3OgYqZrA8ADttG+jjTIBuEgGB8wg68WzcagR94Ojq0Oe8mKYdTvYhq1jv\nEL8GCObYc2rsue8S7GoCX7nNqvWXAk8HzyUdoWC6p2B3Auz3FxR4Q2y+hVkQ\nkkia12chF1LU5n+q9I6/q7nTA+Ux4yZfTYe6HY2LIrfeV3CKaiCvMgFXPYet\n013Z4rNOQDlRqw1vTQLXVy32GtfogeGOhkEn9+ZXuTKN56fdZkROvVhFPJ4I\nQ64v/tnSKpVj9owJI1/WRN2th4xqp9YT8B9z8jhLoKgTNRFs3OzTVFL2/Y63\nQpHFvzKXa4zhp4hzOvMUnn8IiFf8PmkzaVf/JHg82I9KwNULItoQcB92BWJG\n0SCA75GAxrboz73YNQg67FseIGnRdfkWZ9e6yqC+4VHjpnCP9719gNIWL02u\nOtPrFJDfYz2tsMTx6x+VLeNU5+Dta9abN/YL/OsP3NFF56263Us9gO1wAztK\ndZU4RqcGLXKyBIC/QJnTwFpQSdUv6Y7e9ShOQtodzBzK2h+GXh6BQPMkLCcb\nV/d/IeqSBOck/m+Efpgnzt6WUsuCrxRAaAbMgWnNzOdHU4fH18W5vefDSvC2\nLRxI\r\n=tEHt\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"0e919894b82c2ab68683ba0de9cb5d511466ea1e","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.8","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"14.13.0","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.2_1601646188122_0.7842718665438961","host":"s3://npm-registry-packages"}},"2.0.0-beta.3":{"name":"postgres","version":"2.0.0-beta.3","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.3","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"7802ee32d8d3b36b2e4ef20f3edf3e4963ca83b0","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.3.tgz","fileCount":13,"integrity":"sha512-2riIV5+1+E3ZVUexw30Fhnky72d9l3wI3diOqm2/02yQyN0SqFa6+QqxKM0PR7/7ddbtY34DEHLxR0XJBlqjhg==","signatures":[{"sig":"MEYCIQDsQwCr70BeIeud/TEjTmBRAjWNXJMb9anY9H+1e0nGuAIhAO3k+SwkqYQD/cYabhfejM8CTlvqBiI0jZ2qB6JeEtB2","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":75298,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgBprqCRA9TVsSAnZWagAA9hMP/1w12Y9x8Ordz0RD8Jp9\n8gGc75myl5UjwPzElkZAz4A6UqCdSq4Zs468EUbzYEJT56XSxHK8Bw5F0ful\nPltqL4HSs6j83zWt6/bZxfSgQ6803WZhpTLlYmQRnp6eqlKXpEO3sxM7XazJ\nfhanwZ0/eutli2BvdCg+H1GduTTFfvn690S8hjp7JtIYeXIRbJQNgObYpajp\nZ8UfApBD8CgN3vQ8HGbAkvSlrNpO1DiuBA0gj9ZCGYkJFQ6KwY/MWBWRwS7P\nYojTJKa2wiCAHf1O8TeNb3VV09L+yW3tneAV0ZWY8KRteky+6SbKdrczkGm4\nTdxbMYMQHK6cPgTj2fWZyNZi0XSXKq/uOJQIuwWeJYVqxKTjJxMPN5BGSjdg\nE1kQv+6QO7JfH6JZMK8pGB5R6ii52AJqHesD4/ZIjhwm30xzWT+Fhym8UoXc\np+FpI4CMLHCahDEKvM/oQn0PUZM720zMU0vE5uhXzyzR+bKLoZG7PuwSTRQa\ndUk1dMsJQEUe3zh0SAXnSiHljv5ym1o+f8PaYIgOzPIbhZeRi+52W0U5byLf\nF6jZgk5iUXCD8Ya5c16+PIMBrkr42GvdaLkBF7dKzLx0zaVkh4X1iMIx0x3f\nxq8AA+UnYnVOL2BmaUBMk2vK2bvS4WWena5mcbrWl9clOztkuQnWN/hoz8mc\nMvCl\r\n=MFW3\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"559ebd974b7647fcf954bdb41e2efc8db57db9fb","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.13.4","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"12.14.1","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.3_1611045609811_0.914436750198965","host":"s3://npm-registry-packages"}},"2.0.0-beta.4":{"name":"postgres","version":"2.0.0-beta.4","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.4","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"79a780f6080b734f730b35f34e00b23f0c441b8d","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.4.tgz","fileCount":13,"integrity":"sha512-SZTvSBKip9A45sWOK4k3s+gK8q54AssMjUjtaOMpJOXv7BlyKJjACZrC+5Y18hrGWXIVLrivXVzODCMwpD8zlw==","signatures":[{"sig":"MEYCIQCtvA6ruj7/JbqJ9UwCabuFFgGkKUIQbL/XcSjkY6sOEQIhAO9tqglud2XNdYHDXFtwaGC7SMYEeb+5uFhljz1xmT/i","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":76967,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJkjFCRA9TVsSAnZWagAAtisP/1u+r4MCyXLMXSrhD3xq\nWz20FUeadqDnDqRB9nO1Fu50tDfPM2y83ixA77f823tUgkaEibyYpTB414qx\nWOzIZBLv3+4dCIPlo3QI4DkSVFUkWFg3Nt6MqRMc2D/ar+BHDy1PK6PXYy9u\nfsi/iprla3d334XWwRkbv2vUnKWuJyySbcuSFdEfwJgMQ5yBXxgD1VR6cY2B\n/N5MeKK136M5Kxfgv78M5DOonrOlgj0iGBs9adlzW6TskxPJpmJ1OQXART2l\nBmOnfP5nzuj6J/McONQ3thiN5tGbfcAcBN9f4SuY8THiSFBvtnLLvtQ7lEOV\nUQsu2o5E2UBNb9B8RncXPlfVEEMYSPEVv2BmdUpO2t1rFZ2pCg2Lj1fefiF4\n1DtGKA5qLtuJI7w66g+PXQSwmeRY4EUD022vTs8SrWibloxx5T7gHrIAnIqA\nq2JisFB2mSXlhaYJ22vD6wWpr276pjiday5vfHtpBF+EOo1dgILj2wrQ8wIG\nmrdOM3bFEczqrS08LjJHYkjnSlfoOKJ35g29snV9i9qOKb980TmRsEj205FG\nRwF5HfZs6NeMNGFV9rvGMsQEomM++Au3S3gCENhC54S5CbxKhUsMEUF1K+Ls\n9stWdCq93SC/cuUsv+2CH75puu6kzv/aTCfufKham5dtql5e10sanwbAGUhA\n9b1T\r\n=0voV\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"13bf071cea17c827964b0de355d3115c9aafea6b","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.10","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"12.20.1","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.4_1613121733065_0.9868287640269875","host":"s3://npm-registry-packages"}},"2.0.0-beta.5":{"name":"postgres","version":"2.0.0-beta.5","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.5","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"22cc1cf73c08ec80fd737e4242397327d9defeb6","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.5.tgz","fileCount":13,"integrity":"sha512-PcOYMX1JO6zpBintoYkLvc6xHab5Ynixr3Fm5nsVlU5zthVwWYeypjwO/9qNTxDZz1fAmvPHRxAxjw7aojIlLg==","signatures":[{"sig":"MEUCICRsMFCzvNz7aWQ8OffrzaRp+ewjEmvGreoA9Ao5lM2NAiEAsXJGVPc1ZPRty5ht90vgSRsJDKdZvAKUB5XGluAif9w=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":81375,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgdAugCRA9TVsSAnZWagAAnXsP/3dMhjI0+ghKqd6dYO9y\nhPokkC2DNuZ3CZvouqNzzXxhCefYCe/yUSNPTMuu+WpVk6hBy6lpxg970V/8\nKb3S+u/A6u1aHh7wvs7q4tZ2obcn4rOrNsvMjt1OTW5Vtg6007KnLfgkltWN\nXjaIORN3na+o0hvpLXRkxJrk/WU/IwI5y5u0f01PyI6DBsznxgj/qLey+JPy\n/Tlq9cG+xlsnG9o1GvxddW8LW7us4EFEFdHsu4t2JaCAO70O83qsBXpWoBMX\n3t9fCWfLmHRcv9JEJyEG32wt4p7mB4mhRnCJ+OxzB0uHX8rUwpcqcbu41TqP\n+x+8w7FADj5AJeHyk9ucWM17shjLc2Cm2Ko7zkgUMLcXIU4iAyYVJ6paiA8I\nt7P1orGvzm3ZLglg3wL3H3l4ekeYVyOgkqMvIVJPgfmA7hXXt0G7RInA2k4P\nr2eSAnPOC0SGtjRnwnAmZ9watfyiDrpJ5Go7rc/QDLVPx/uMPnasYEuBZVEC\nsVaqSSSW6z3rXJZPiQ5EFm1lxtY0ZzeNpgPFkPmYXE+4IolR22mlp1JJPRVD\nj23K0P4Jv1qmRKb8GPVLGcpGzrFPFXxeD4B+qyXsii+QSmPTqWyYKM22aWC1\nszZ/0kaeKOuse+9V/U7lYdKyepBO0CFfDy/cAsMVLgFgYX/nlTHdycUNo+83\nkyAg\r\n=dmA/\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"2b5cbc2bf99109d302d188e82851079cb0fa45c0","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.11","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"14.16.0","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.5_1618217887596_0.3160113029716818","host":"s3://npm-registry-packages"}},"2.0.0-beta.6":{"name":"postgres","version":"2.0.0-beta.6","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.6","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"e7a13f16adb9c506201a823978157f881dc6f131","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.6.tgz","fileCount":13,"integrity":"sha512-oBEmGkD5suFsImpzAyhHtt/RRmTP0i23M9o8pAMdc80HiaRSF2dtAbdEjrFJKVCCOgXQtDsxfGkSbHEhsgSKUQ==","signatures":[{"sig":"MEUCIHvv65kUaa9/MZ6uZYDq1cF6DmsgOAO/fOZ4ubk7n4ZbAiEAw2UEZrDavXm84ayZ45n+eBVXPdN4l6D5A56lpOQP0ks=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":82377,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg5VpXCRA9TVsSAnZWagAA+DcP/imtJTUYOi1fUudbZDkc\nfb5PeA1mAksUp4o9bDLyEMIldort2Yikv+DWwOUiFhPcQCaRYh78Ofw0WrQx\n1jB54rXpx22EJxw4W8BiN6Ee+4SoKAvw8FnqzvHb37JkKrYT29sVZBKd1m/4\n8KoU8mxMjSzNu4TR9UXYiWFK8D7qk4CFSFZUPuPNVUnhb42PAe2xNNM4Nq7Y\ngjsy3ytCL0PoCU0BsltK2DqD9tqBi1LEzLLSiHOlGLYaL6BdsDIXspbBGt6B\nOAbDdfOfZF8zIoItUFR15M02nym0GaAO0MSYBtCk10Q++x8/nNYwAjwVnz80\nTnGcD4SBDSTB0Np6746O+680GAl7SdXkdORrvFPbaZuJ41ASln+Qk+0hOmNJ\nfU9McXC90H5bhfGCfEnebt9SwddDg9D27Dodxqpd3oZ1+s305k3aUttuV3/C\nkj7dCTvTPfa+g8nAp2nAavPtU0oN5y24KgRyVWG1IgYAV1cx08OFNnqaTkYn\nyKYigC2tn/ybnBmthu+AjC3u/8EMjlCNXwTZnZvMH8TGvYvmcNC8zox2/8Gv\nHfX8CA3ihHcYElqIlg1r0oNowctpizLTCky9pfIMjWDE2jLW61pjgf4GyXtd\nth5Ch5W94d0Tx6PaW3uV9uSiWaKwr2EWKSaCUjQYf18MpCYT7emqElv0bBOY\nXZdt\r\n=1BC+\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"0183c6f6b522801bfe723ba5d9e1bdbc6e520597","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.13","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"14.17.1","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.6_1625643606564_0.879237186156554","host":"s3://npm-registry-packages"}},"2.0.0-beta.7":{"name":"postgres","version":"2.0.0-beta.7","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.7","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"69b1756ec443f259779fdd17f7e63549022f3dcf","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.7.tgz","fileCount":13,"integrity":"sha512-8xJmg/ls7O1tBf/zY1varuEm5sDUxisP6Fi09Kb7AYOcqvRFkvP98pAkA6IYaffeCnAz0UljqpkBmbLyO3qBoA==","signatures":[{"sig":"MEQCIEKQrpfljUd4acOGJgz6Jvyag+/XuLo/gKEdwVkYfg4aAiAFJFudTs74RecIJNX1L+GqVcf41BoYNRVmcF85umsjaw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":86820,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhGiErCRA9TVsSAnZWagAAS+QP/jobCLBlooWoetDP41+R\nrCsYMbkQCqI6tLcvyCvKQw7/7FsjSQV8M+HNFyaBMYE0D2pCwkpsxXdhg8Tn\ntefOCL6k5SQrEDQIQxkiT1XJYUv/n0o0RzFbrtTV0ofrbN+eoHS/oSZLq/Sk\nqBpSUr9RYiTU4f9pWih5lXskLKEWshWIQbD5kxG4XoR3tqEinEboucSmM8fR\n5DqPWUp5gCWbXjOML85TfqqB61WPSElHyiw+I8tX5bY+1SyMrviusDJCzWIH\nW+3wG5wL+UptV2nr5c8FX4gn726lhVh2DqNHDICd1dGTlRJvSQD0Ems8VElg\ns6eaLgL7t7sWENiUbQwwGiFmrWQuEwnuxK5vvYZ2V16b8iRHZhFHuTupf5Hv\n8QB4Argi7z0zGctJ36k87Dln58+4oLXk43JpE75R2iE4DVnuk+BVEk44f1so\nGotMoLE/m0QJ8uQbw1MvCYqZdXUkhY48NdJOcckyBLLc2LRjcQ63XUkrzdzk\nLJ/uVv8WEaIKdreahrz1TxUgjIbT8hqyhuK0EaDFooTgp5QUK9IQ7ye1u1LJ\nB2GgFvXefsUQgqxeslkBBMhbScz701prWltEFb+hIM39a6PsiVeLQCbzzObx\nByy1OVsyMqPrITZkwqGLez+pEqMcyCy5Vu3dmrh0GoA8UucTWL2XXNDv6FCl\nEU1Q\r\n=fkeG\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"3c3247b2fa84a15b2ed2b07472195b6d9f880852","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.14","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"14.17.5","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.7_1629102379204_0.605489266372552","host":"s3://npm-registry-packages"}},"2.0.0-beta.8":{"name":"postgres","version":"2.0.0-beta.8","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.8","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"c6700c066744b8fa3d177132cac1a643eafd984a","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.8.tgz","fileCount":13,"integrity":"sha512-az6/ogJs9/oWV43wKN4gpRSnQE0nmcnqznnD5B1YBRf1S6pfKm0CvGjQQ/NumqCPzsuOgyMZy/YtokfBE15pLg==","signatures":[{"sig":"MEYCIQDoQ9NvHf8Xr2fJOuKf7nuS5HPiHC2O1NOSSXm3mx9EaAIhAIY2T7UUAv4Kc7GujNVGmDb/BA5eGOTRteJ9+KIO+LJK","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":86828,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhKrmBCRA9TVsSAnZWagAAqfcP+gOPTRpu+SH8JoAxDANc\nbb+HtvvBzcVHL9hJ+pQkK7980Jt+jicar3YUjfsFxHW285HSXn/bibvq7OHh\nwW3SIqG1TSWyI/P87QDy0axFRQjByRK+CUt/3q8b4Ur+9L2aRhr1mBK66KlP\no99zoV6Dx0AYgWlEUxtkUd2AafNpZulvA1UmmOOTkuk+zGSJnv0Ga4B9G3r+\n3yPUhjIeDYxxiWjC25pu/j0yCxz8a2/4gL9mIz4MeFkW/yTzja6tT1rebRnj\nmUT+vO5+3cWgVqq87uZJNRM4GdFggVEWMKVqanC7kvqqzk/3S96ojl5oZ+0+\nnJn7NKGaEGw973LZCNOPsQ6kVcRqmGt8WycTFf+RDtxVrHFeSGSE/rr5UBwI\nGmT7YOfHSWooPpUqgByd4j2oM35LIScPdnXdQsXbsQ5+rzb+CtGfiRmnbTmg\n9v9elJrceSWDN/7i+lqvrVrxPXMpjZx9wafnEGFXVSnEykhDTBTVZfjT5qk7\n3/ll2o3NOdJNNpLsWrGHhbdnjsJ/EE8atVpGmjihUvL2VB7RZf4yDwVWJtSr\npe63j9tcPGAXMBO80cVrTCC/CWt8N4fORe/1ZECo0C+1XKJH5fEBjz0gVTRC\nqS3QRKuI6hEFemOV7qUfvVaHcwf8/DX2VRspFDiancpVzOAr0ZhrbP6ltc40\nZD0Y\r\n=i+33\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"ce37c8028b2cc69359449c60ab691c7a762f250f","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.14","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"14.17.5","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.8_1630189953382_0.8362164804522254","host":"s3://npm-registry-packages"}},"2.0.0-beta.9":{"name":"postgres","version":"2.0.0-beta.9","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.9","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"1548df1c83a3cd5f3ffedc53df5ca9bf0c26040c","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.9.tgz","fileCount":14,"integrity":"sha512-CnohjNtw5HTfkmZZXREhcVfShbP3dnoYHNVZOXGRdL59xtviktykciEWgRcyMWZRwX03YaaB9PouUNtQM4WyHQ==","signatures":[{"sig":"MEUCIAv756h3NA4xxIw6OcMa3QJDHuer5PGa/jG8unzgXZUAAiEAjivhr4rEq++JWf9BQjkV2DWoS+WohplfBdeS2VNWVWs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":96898},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"605a917b47082368225c8ca3b4dab27079d04567","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"7.21.1","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.9.0","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.9_1632083343530_0.9964695008633626","host":"s3://npm-registry-packages"}},"2.0.0-beta.10":{"name":"postgres","version":"2.0.0-beta.10","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.10","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"100c319bd84ba3d6c5b187da2b23b7fac0a4aa64","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.10.tgz","fileCount":14,"integrity":"sha512-d8R0goa6k0NAna9QZ4vVV6ziAHqtCyI9/nSPI1OQXiB7wH+xQ8SftHsBHvDYYPqTICAAgr72oo3siU50E6Xybw==","signatures":[{"sig":"MEUCIQDJYQj+G1LaP2sowUGMolF8ycrnRyQITfKcgrDHdkfBggIgfP3T730MOcgMj+TLThXhnkP+4LQVWbXLKXxSzvIuPZ0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":97115},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"2915105300c6a3bf0b37a03c59466859d476e5b3","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"7.24.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.10.0","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.10_1632915790190_0.9206184325612741","host":"s3://npm-registry-packages"}},"2.0.0-beta.11":{"name":"postgres","version":"2.0.0-beta.11","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@2.0.0-beta.11","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres#readme","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"0ad0410e9d928d62658c225a5999c3ee4216285b","tarball":"https://registry.npmjs.org/postgres/-/postgres-2.0.0-beta.11.tgz","fileCount":14,"integrity":"sha512-eJOrEIM2RtgrCcAjXhDN7S32SpHrPrXv/B9+gBX6bJFPZwSxBTszDj/Ot4BaEQJUVhf15fVrxIEFR4s0W0vlRA==","signatures":[{"sig":"MEQCIBE9mU5jFhSsT6KCkV3rMnx9rliQR6kKsJc/8d8s08u8AiA59084dqxzta0N/0h9Ywwx4J+sc3ltZNL0vNdB8CO3bA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":97333,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhlQV/CRA9TVsSAnZWagAALbIP/AjtNC47pBBRdp314CqG\niGiNBIc3BLDBAzkvaBXbYV0K9xG9dihB6El6o7fsAnI/UUd0mAgKfW8qpc/L\n7ivWmY+9lQZpfefWBFA7kQyr9S6xdXq+x8LPoe4jiGn4J9IBRqeqpKpawnU6\nJNJNygf/7Uoq40l4TZwu+sp6qmVNWyEQ6nM6wJOz+QhakYCYeZwcl2XO0qHT\n52mJIEOfJZ6P/9g1ZCyzo3wzbX9vQMdbq7p6bPvno7NFj0vNZTfnscaAz7qD\nuYtfKYyZhLRu1mb+BnFUdp7vNf5Dd5XSGuMNEb7MXQfsITMXGK/ROqsHgB0B\nbAcTWFNwrOW6smzoHKlpRUtKqNnOm/sr1ywZNcBjMxuipQbVTk5V9vm+2+p0\nPIHmkmtwQswsq60K+j6G01awqOqECsUAc0ALANa/wsfw/Z2ea3gIDzHUsaaL\nU1VFSmEWSL5MJriCnBGIXapE+U6aRt4j9CGKhsYo6GH/iPicrDyhXu4Z1wIr\nT6uKauTaAgfSLVM8fyRY2E8sHkwjUFvJdA7QFzdQyz0KqF04+BVe8pz0caML\nU6jAXDGdy2O7zGf0e0U9Yt+qlTCTW0Ef1oVPAJUl63ef6kbuLe+Q7JQZ6QmU\nviBTyd1YoIgfK3F74CYi10logSGkeBLG8hrlJjBxG9Wt9fnU23A3zLUyj7AI\nq/Cu\r\n=NWzx\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","type":"commonjs","types":"types/index.d.ts","gitHead":"4a6669c1b623bb89fcf5a9d13dd09aa69c679811","scripts":{"lint":"eslint lib && eslint tests","test":"node tests/index.js","prepublishOnly":"npm run lint && npm test"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.1.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.13.0","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_2.0.0-beta.11_1637156223571_0.3650049042248713","host":"s3://npm-registry-packages"}},"3.0.0-rc.1":{"name":"postgres","version":"3.0.0-rc.1","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.0.0-rc.1","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"2cd6dcecfab07c4a3984ca8db66c252e984c1167","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.0.0-rc.1.tgz","fileCount":25,"integrity":"sha512-Ho5ge/QYMsHkcOTCgIxTyXI4ih6Vd6xV4S7gxQ5dQmGszlhA7wDQkZZWiTr/cKPgQhIMXVTNMfs+dbmkHS14SQ==","signatures":[{"sig":"MEUCICdkArKHSg3LttIHRMehRzLpcWWgLStzUm9vMaZieZgwAiEA/2OHEG1abyfgsDsQnUkS37Bede6vqtYRq2zd6vI91u4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":182540,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiN6iNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo/FA//ajob7INUZBbFr97xyEVFoI3ggQYEv/LqVgiOO3a2LGIzx3Ln\r\nVOp01H0Aqyk5Bygx0utjafEfroo9l/PG1qyRjSlFeoZzoDcbTRH+FwxR06nj\r\npJpMdKhCkQagN8Wl9aDKO7Lv7F91amIApE8iWNEtvP2EIiwQ2mkItQ3Jv5wY\r\njvHiMhMj4py5+p1fXN0xqIJcJhiCOS79wfSE7b+wM2yZvWvauUnBZvgc/GR6\r\nqytNxGKk2OWATBnbTnkO+C1wSYpszfFAoNX9LtYMfanh8lp7fpchLFsAPPQr\r\nT5J1QKXGSD2LYk6/ENEWCXW/m2qRpUp0+DM0SstzHv3A0UdEhTBnBnLVwlEo\r\nVA9MgchnsXGuaT/npW14zGJC1yHP2FMuSvDqIOGRaB1pPwm5fa3RbTvbI1YJ\r\nqBnMYAE/hWDw9DDG5zdypISzmw6vPkRRW5L9wLBBMwc1LCOGMwSwFvZQyKkc\r\n8T3XwGBiD5We/860FKEn0eWki5N8prYqAvf5u8UTUl8bwaXDN6/Pws81LU85\r\nWaGayDVd7s0EBKbXmW6mk4TDgOl+otGfTpHAdvzWu5Gd1TdX7IhvChr8yoo9\r\nloLFu1T+yQstdUD+xBbr8okp5cO4GrbDBPshqxCQTo4h1SuXyiYj+tIlHs+B\r\n8QCUr6wnrthbGgavgPYAZQd3dMmK05w9uGE=\r\n=eHtF\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"00dd39ced3f28926e2a8d3b2293ac7f39b3056e9","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && pushd cjs/tests && node index.js && popd","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && pushd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && popd","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.3.1","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.14.0","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_3.0.0-rc.1_1647814797758_0.5892697885304623","host":"s3://npm-registry-packages"}},"3.0.0-rc.2":{"name":"postgres","version":"3.0.0-rc.2","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.0.0-rc.2","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"e7c9d8d4040c2cfa0c50c1e68fbff3a060f2730c","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.0.0-rc.2.tgz","fileCount":25,"integrity":"sha512-8ETz0Cnqx4Ajw9z+sgvTL9KGQ27KSGAfOQRqenA7u9gnIDMe74HRADNIhDnBHnBlL3czhMDrHyilED0aUUTamw==","signatures":[{"sig":"MEUCIQChyWGUlodBh50aiBcJjBlBbUJ26kYQdEmLiV+oMcbFvAIgfxBaVNvFPrPb5BJjly5aUk239hiYmhtuM/8tOHtzZzM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":182423,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiO5GIACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrQTA//bd/Y6MaVXM0f9ShvM3snQre1Hs0ZR48WFjuyDm4Ysk2eR2wY\r\n7wfAUHYsUz1lMypO7JWwxeqRMt7z5oz1xNlHoTMe1lDBHiFD7om0Lou8l8Fk\r\njJBRyDP0q7od5hvKacdIcRVgUaN9x6iS+B+mwtipW+IA4gupkq7lkcO4uAt+\r\n1iZGM7wk2LW6oNk/ngGSvG1q70Y0Irz3Sq1u+PTATCbCDNCaGv2H6dZPE7rI\r\nV7NQwLaHWWAVdg+txePDHEiyZWXinBrvYG6lAOPsnYBBxN1/kWYT18EuXlQf\r\nOEgTY38Osjoajz+rDs0zXBV9EJoGlD4dBProi2WJXFBKyXWUDkDOZqWP7bpx\r\na20pLEKK8GsJhvazwb0E63tWtyMfm6H/O77tSYJZHqZ8MRidEBsAfoAud9dl\r\nkWj0YsreDBeQzTDid9oURzcAYXG+VKGpZTd3dn579tp9BQsrmx+qClk7eSQC\r\nQsVeLk8wOX75hrAlqcgJ/suWBvukHwTYNJJVm1nrl1JIytzKVf3dvjl9uz+c\r\nwxmZmRfy/pRRx6aODXH7Bj1X0z7JTMtG5XamtRiLrHxme4mbu/USTG96JAbl\r\nHq4A8rO3kmCKkVTY2gP+Hj9mn68fA9yKe3RvzMBmnQ7HwwtIDYnZ4Y6HE4Yc\r\n0y1TywDkcgeZ+X4OjB+/26wLAyCtRSt1Jt4=\r\n=uFxY\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"5076f604dcca528a592ab39e5dfceb7313f40a25","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && pushd cjs/tests && node index.js && popd","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && pushd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && popd","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.3.1","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.14.0","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_3.0.0-rc.2_1648071048113_0.9870439902605181","host":"s3://npm-registry-packages"}},"3.0.0-rc.3":{"name":"postgres","version":"3.0.0-rc.3","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.0.0-rc.3","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"dfd0434db8502265f79bbc3b5c7e4bc7d6183063","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.0.0-rc.3.tgz","fileCount":24,"integrity":"sha512-FCjTYUrrTIFhHIcmm/4aptd+epy4v9rwVdtjD0F7TM0qKu9RNnbEQ+XF7Dg41Do14PNQm3AUlWwref2shLrpjA==","signatures":[{"sig":"MEUCIAtu7eAnP3bDY7fCzD+frakTdtvo3auyPYG1eRXiTW7fAiEAtAXJZthP4OT3qnEUx6jovj3CLWQnsBoSLZXs3CIh2uo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":181212,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPLsYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqNuhAAhVBqvfhUJqjcqvSWxX1kqNkYzDg3L1kVR95zzZ6x3OiJC4Uy\r\nfbuvysJ5uzWUiiCMZKSfu0kVxcgInMA9nXHGsxWs/NNcsajHadlk6mvPu6qU\r\n5sJUwG20+BSFXr9zMSIgs4rReNCQb7O3O8FUbBsxzu5nQvCdyTC3HH9oGidT\r\nEReUQJINcN3wHEQ0M78Bu21CXA+551VzC/PBErKi0vk7E9I2zb1jYYqD04nT\r\nXRRKae+3i/wrrfkdFE+Tp3Xc/hpvUAYmrb1t5zp9JqACnJrRBaldg3Hwz23Q\r\nmFLJiz9PMah//N3h0aiFwpUbPvnP3slJNquDN4GTKbF9SL7ToEH+XzdjZJBU\r\ngBKgltr2iEa8M8DYCEiVzrj2eVy3qPwsxxLykrbjX9nKT/gRSmgdVxILKzzE\r\no/10RX6mWR6ACnykj4BhDkdz7sQJTpeuc3uFEpu1sYIcoQSJJ8nMcFkqo7iR\r\nyLwdYumeFhTVw6eWrrcjA/SiZhxm7d1IhOo+yfkor1qoySFfwkuowMwVuJFF\r\n856t7SzgtT/yrW+NlRE28jbSJYRGJ5zR89LxmYUNEliu1EohKOmy42Xn/vvk\r\n8ZkRXHzyLcrUi6WlkxK5WglMulyE+m4ErnmwF2pdaLPjp1uhxX1+oJGZ+hzR\r\nRUoHSA3EDkGVnlvWB6kSg3HT1VDQkXSMdck=\r\n=zhT1\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"ead89cba995eb258db340c102b06236827ddfa39","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && pushd cjs/tests && node index.js && popd","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && pushd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && popd","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.3.1","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.14.0","_hasShrinkwrap":false,"readmeFilename":"README.md","_npmOperationalInternal":{"tmp":"tmp/postgres_3.0.0-rc.3_1648147224822_0.5522698878916734","host":"s3://npm-registry-packages"}},"3.0.0":{"name":"postgres","version":"3.0.0","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.0.0","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"0786755a072e203cbd17147dfe0478014f986906","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.0.0.tgz","fileCount":24,"integrity":"sha512-ZCEv0/G04tv+fa9GUhAwa4qLBXoWxG0N+Mia8B0J6/xOIWMZlmSh2F/moxwMRb3enUcyPzNBaBV3ZK2wKd/TFw==","signatures":[{"sig":"MEQCIDqSI0WoRii7dizXT+b0yFpf5x/6T+/cp/bZbcNaEDqZAiAgr+aZQ0M7cMU+1MG+pFl8PkdV5dbStYx5LonqMYwnFA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":181237,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPL1LACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpoUxAAhePV7UC3K38W0rp0V7HotfyVRzy8Fz2sFUP0Wben6ZZESDm1\r\nmRjpMDcseft3EpyYR3ZtaxpembnSBjFFWOp6R1ds1pAsnzbn3HyilPe/XwI+\r\nkSESbvgw4FHC2l379e0F0ooRl41dAfEZjFJ9fKJOlqXJ5NTIf3D4gPlHMfsb\r\nLAnm+TGYMoUildiIh3vdc0jO6WdOzsoiHAvMRYFFhtrxuMULmMAX6Ke45nfh\r\nkdlGIZzRS5XNeC7A8TUWrm+jsgPOliRT4SojZTCW162QCpO26arKMmqydzHl\r\nhHLtewQmEclAeXkVggOJOg7+Wxrw01VEeWyubC2vzwFxTcv8UllUXR7NIAYH\r\n7y74cLGh9Cu0vr+KJqAdpPifGCJ6uH1Zm9wgzgeW5ViBKdKvFfO2aEYWaSXs\r\nCu+n19HvpaHPTZIY6/Ao1FIIX1QobHVceBfUPJY2qq0iy/v6pBXF44UrBFfj\r\nznp6u2btOLJd2MCqX1pYgzYQqGM3a5tb9zXsODTDdnKG84JA0sfQPEyX9gWE\r\nymnAYqDfmCZb4CNJg4pZ58EROyJ3ez89hCLy33uQAe4nBds3gV/glydjZj7n\r\nielNpyKRScaZtERfMasms/XXJjsNfiweAim6xVf4FrMnFaSQaV1cXlxIRNfk\r\n5/toKbE1Ogo6KRDSoDL/5rd5zz4zGfwyxjk=\r\n=8IFb\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"e91ff354056598d4c47fbe7549dbab12060e410a","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && pushd cjs/tests && node index.js && popd","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && pushd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && popd","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.3.1","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.14.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.0.0_1648147787641_0.020950805808596984","host":"s3://npm-registry-packages"}},"3.0.1":{"name":"postgres","version":"3.0.1","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.0.1","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"0492e5f98c9b495016efe58965ef6339743a8304","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.0.1.tgz","fileCount":26,"integrity":"sha512-X1D5LpY7vwL1nxwKr6uvLFR/ErYDGoxsk8NPQXKL6awsFyS5/MGybUv0FXK8l7sAUFE1uh/wf1xJ0iWj+fyrWw==","signatures":[{"sig":"MEUCIA/VSTg/0Xzf11OjasrCOLDA2sthv2i5i8zjXTj361+tAiEA0VFYbBMEj+LFotxV/Mh9DR9NtNBaF9Z7YVPQN8Z/AYI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":181163,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRLkWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrnyQ//W0LxPSYlUIbrAnhyqCNtDg/YBb3OH/hoLivObsOlafMAfsAN\r\nqJtacqqw6mCf0aPuiG04bj4OlMsca6lGVm219qFb0hT5s+PPImJoHPBayRPk\r\nH71k3ZvoZ6Bza3foaS7xNgxA+P2Sx/LgqPP24yoQ9EY/amRmKZSddnKVmD1z\r\nNObXs6d9HvTSLGWl8GRiqJkry0kfqgcObv1VKDMqAbo8HyNDisjUKxzIHhUN\r\nUKkmYyLOpRQh4tZJ9JmFSlfeSvShSuIA4ZCdETGgC0tVr/YR05OBFk0jQczK\r\n4eHKjeUZ4pWV7KgZPMNcox9BcSQlMQSh+et6PG+MwYV8ErAkdtbpdHG6EWDR\r\nDoUoE1BuOMU8siz0lrP4xydEC0eX6lgyvd9z7jvSiUeSj5Pkoo7a4HJTuRJq\r\n51ME4tfcmBgmn0O7tmqg64VMUc87y3nUGHyh6LRyqRezdU4gcz7la1swjb6s\r\ncA9aFpYZ8DW9QaprSDBZ6jaFiBIbxDlSZuUHnGw5gi6zq/YFh1qpdktuRlQd\r\nbbkNmSe7nxR1izXxSpAWrUY4L26VJxDZn4KT5ISgbZi7StL6mNfZxJsFfK96\r\nBRf7t01Iaza0K/Nh0ZlkjGX9WZEe/rE+zVVGhZJW6n6uyHfmlQQfsaYx7YZ+\r\nP/MFIepPXZNkTYmvsA4S3BKQSJVmpTcUoqM=\r\n=5PR4\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"498885105188ad27b18a659eebf12a0edd306079","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && pushd cjs/tests && node index.js && popd","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && pushd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && popd","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.3.1","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.14.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.0.1_1648670998098_0.5255882111792709","host":"s3://npm-registry-packages"}},"3.0.2":{"name":"postgres","version":"3.0.2","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.0.2","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"39062f0cb92305655858bb662ee11eefff6f03f9","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.0.2.tgz","fileCount":26,"integrity":"sha512-sHkEGAnPVqRclh5oIr9S9e/VNX0/MUb2PgS9bl/0wnI8WrHhzMmxqq/fAkMZKUUrC3Lfa4qaNh1dyDPH4Q8V0w==","signatures":[{"sig":"MEQCIE1uak7+gkNjo1JbimQpcK9TBTzCYruuou7hjGJyrCawAiAFIqYWt55gQSpomQgUkprdv9zXlSnOffhOB5SENPDXCQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":181120,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRZmJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpMaQ//dr0qCSxOAUaLex6dIK6s5rVnCd6SNmuYiEaPm9rVamW3u0HA\r\nAYkqCypTGLN2UDlDTvmeJpEXFREx0WZwUB29oN4GPvVShkjCUhLfmgjpwYDa\r\n6Yogq6vmMem+ljMpOzf5XKNFzYJ2ZnJPwx9vqxYs3gTMK5kcYX7J0VsqA+1m\r\nwMaap8h2CXa50QHMhf5wZ2XEHuho1ObC7x3kV+HEn4yiN5n55P+lfSAjV7yR\r\n+0LMEaP2ULNZfEENA0kIdU4c7ZF2trA8l91NktbgRv4cPL6Jo+yuBpglhCuI\r\nNdJTrkgSZJKISf/zN8vGJeTB3FPnmCn4KttRX2QgXn1zhMv5VAS5Xw+ZngBI\r\nzZhMjMVX4+VqSWG32d7ijYJZPnzNWTvnUl8KCglXU/Yi1afkeEUx0+IDVaU4\r\nv6WDBQWwLrTw/N84uoOSHcvABQrVuRrG01QDXtzOu4JgYXMpQ6l26Gusq3mN\r\n5fdsNTlPit1BNjTH2qTud8Q1ks2XJZi1/ZdqWvd9wlAhUoGIE8b2ieWP5PKo\r\nDEiSpEVXZS9CVCRZjOvaROcU24GNrRlY5WHnmIpb6mMEvWk0s4jynggdroiR\r\nBwMj9yS9t9EtRGIydxlpoCgdmAw/TIW+jJ04AzNyd26vlKQx8ixREIRkPIv1\r\nX3G9XInbHmz3AK7p9ApRsONC1R1LegHz6eo=\r\n=XjiP\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"c388a03434a4375d9efde381338f249b844396d3","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && pushd cjs/tests && node index.js && popd","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && pushd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && popd","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.3.1","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.14.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.0.2_1648728457073_0.3592449164482694","host":"s3://npm-registry-packages"}},"3.0.3":{"name":"postgres","version":"3.0.3","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.0.3","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"f863e17e7b2be3b1c775593076d8bed7f67a9a53","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.0.3.tgz","fileCount":27,"integrity":"sha512-uw6ZIR9LTJUT5f3Wz9JdT9L9U4GGlDjWYgGNSEbJPvqMsY+UUInaf16Oa94lJdjQaft6lhlr3LFl/iPZJoNlkg==","signatures":[{"sig":"MEYCIQCy9rdlyy1uHdYnnqJQXVrjSjpZ/WAdX81eArPq6iYkfwIhAIGfw/nh9+0rHkTxupG9MSbkCysAdad3tASFYR91e0cM","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":187429,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiSs+YACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpZ+A/+NZadQRv64jL+4ydvPgaEkHogHiUr9Oh+JR0ILyBaeGrt14cg\r\nubj84Rx3pcC2iYH1TExvK3Z7J/CvJCcaJabvYOcREIVfYb0aX1MuE4/hX6Jh\r\n2XZXkhFxaUCLS49Jjko/whTOBLS0Buc33MB6TB4nGsY4QbtAWYAqY+aNeKZH\r\ndXhmDlfM7vUFK/bcfov3yfW4BAsRMXKRRzYr6FDdTYngmhv/xgxIcKd3XceQ\r\ngiwqPnX7yeK3PcNB8k/xhhEaWHDH756ojxYMxPl3PHmpIEotHNNXwmpaYPCz\r\nnLqgotQNOPcLzLUo2CIxybm+RuxtCgvVpGfM9mJ8Z+kQfTJ9E5P9g7nkT2ad\r\nBxwD2uRz2rtFPvFEbiAW4U8rtcnoCZVDmGReSBkgm2rZwXYpQbu2GaGy135r\r\nVm7ijweYmb8k2sIiT7PlqqWc+vjVWcxGiOhtcLhov/OnFV5ldpuAWhag+dvW\r\nJt1IrL7Ct+2tcVk9+9OSex0+o505SkZWQq19oawXDsKC3D1BBpiv3LmajvXF\r\npnFqpWxNHTzU9pAsbJF3fDcykqTazT70mTWsYbmofqlUaqMQ42P+xYU8lOtw\r\nvauiOm5T7y8ZRGtmR8b11JK6Q9kKxian1sicrpSDN4Kjp1l93LZdQ6STf17C\r\nC73DYfPh5ACFxj0ELCyQ1mmkjdQPoYLJizw=\r\n=Va+H\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"20c919038895606d4a213882b7778469d8ec5296","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.16","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"12.22.11","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.0.3_1649069976102_0.23065060902361512","host":"s3://npm-registry-packages"}},"3.0.4":{"name":"postgres","version":"3.0.4","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.0.4","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"894399e9ad46cef75bf4da50370b7ab1db26425d","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.0.4.tgz","fileCount":27,"integrity":"sha512-Zbsky7gIOORk62Bbo6CXPOqxnkhup3qM8kF0U7a+El2tFG3qhTO2WEyGemER4+0kJOKox0fn9vOCJOIE5dYB9A==","signatures":[{"sig":"MEUCIQDokuzbyohiewLXZ7IMgFmxg0nPRds9aMPFZwmVSV8YhAIgQuMNsdI/L84rpMM5555qLwJjFJ+6AtcwOV4O70/HdDk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":187818,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTA7hACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpAoQ//d7qIhfQn3EprYLaE+5vvbZ9V9FCQ2WspgomRm5XkZVnUtcoz\r\nt0xEj1214TrJ/DVjS/qvhP/2WI0l/fmobTv1erypAxjEKOKjYh0UlpsWjno3\r\nGRvWhWPALq+KQpZLtILQBZKBOKt7Ri7caVEyz7/bzumPXLarJM5d06PfBNrv\r\n6EU2DA5cS5M6/YbKJ+ciwX6HR+qMSZzbbuvzfZ+U+IgLlzp1Fw4CpOmK7RBa\r\n5hxxexam7Bl9+rziKqJ2ZDnmCwwVoaYWeI3y3OP5vjfemHOipGltMLYBs9Fd\r\n1J8VcSJeq34KtEDGBAfw49T9AaXV0g0qkvukRVKSqyM0gnLr/E25PMwfs6fZ\r\nvT+b71mUvvpsPSgfwSVKlEX8BNiEc60ahbpLZOrlUKhTImk28KHI6GO8zegD\r\nVzED4WulFJ74vauzANZhRCFA+Kh+FGzZmWaP65diFzaq2KjA3nd/vVTzwhyv\r\nX5599ULElm9hF8hValGWKQmPkVU24+VgfyqV8BrUdMEYmuXDxiuH+DrAh3Lz\r\nUA+NFqqallzrO4pWBXQB6Rh22d6e2AvT+b0mrHPQ9hEujBb01MLrOr1aJh9A\r\ni/DrpVRs45CH0Q8MYZ55TVqzQbJh8AWW8UlAaaaaGLSYtrqP8YahkXZ/qKzP\r\nE3kgJwd+jfnn0dXoxW17eRa2Je3lA6DIaGM=\r\n=tEPD\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"576ac2861a37c2151f99deacd78afd45689767ac","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.16","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"12.22.11","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.0.4_1649151713198_0.14933301608874494","host":"s3://npm-registry-packages"}},"3.0.5":{"name":"postgres","version":"3.0.5","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.0.5","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"e94f325b6449d829890774264feeed88491fc563","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.0.5.tgz","fileCount":27,"integrity":"sha512-/9VVVRG+bzLc/AB6QukEV+SERra2IRduGd8PDz/ZGu+1PQ6+TgCQYvX87GtPfxcYW4XZ58cyurJojnphdazW1g==","signatures":[{"sig":"MEYCIQCpClqL6ZJUdpDSBB/Zz3KuKNpyqF3/ku83GaFKnJiEtwIhAMQ68FtRdZz3XsUOcsSXbigpzbAZZkBxzJzbw0oNptyT","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":189099,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiTdKeACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqb5w/+LGW9Qj5l5x9pxRIVz+qg5ptUmWAiYdFweuBwtj8LBqW5ODDT\r\n7L1V5uqy0L919pTtvaqszTO15v2UqCDK9v+0FO0WJoPY6SoLtl5EpcTjDnCl\r\n9DOwpVlti/u3i45GrxLJC+gZM+xVS2gso68H6CJdEwMV7hwe4k80MV8Kkoh6\r\nmakq3T1PrsZb8BVyppfiCEwyueC2Fxm93Lqbq8zePf58bzgArx/Q5VXvU9D7\r\nbLXwGujH/ucw3i66tCWf+PemxxMzSgbOZeXSAlmCp3ddIyOP5v62KqAYXp7Y\r\nHmDI8DM5mxuywt92y93+mlNMO881C7PEveMtXn0TJOtC7bYnU6jcilN3hb3c\r\nilNgu+loojUb3OOvVVxg9W9PjAfnHr0nbpAwNf+pHheQrB5YyNx/EGFSQ7hq\r\ntmPb1Tj/tNPU3iw+m4iH8XUjyDnoh7OTIEdCMhb4xuFj4iz2dzJsICwmMsQi\r\nAwoSuF6nBFDlTUEhcitSzQdBb6q3L870cXYhg7cdkQeHyS1KgKg9EBfYx9nW\r\nPwE9XMQGRha3dOSVRmeQTmnuPpdnSz++ZigM8B8LrBlX8Kjt31egAcSLE1YI\r\nGeLMPNM1xTw6YUzvWR25Sih0KpLqPiw2PtoK7j/0f3X2PAxlkVspZz4Jn1iQ\r\nKdBzxm4k090m2R34hchu55B1y+t8Zcboedo=\r\n=WLvq\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"e3a93fbd1fa6b635341631c4a86a166ef27d81f9","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"6.14.16","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"12.22.11","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.0.5_1649267358650_0.31942282518966825","host":"s3://npm-registry-packages"}},"3.0.6":{"name":"postgres","version":"3.0.6","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.0.6","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"241e4b339d354f890b28a3c71f3ef81030db31f6","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.0.6.tgz","fileCount":26,"integrity":"sha512-CLUSjqwdBZezsRS1Enh+j6YVqdgaRfa+/NDYY+XucI5V1dlgeLF4wM3g7a0uOUB01aiqYGFM0ZMXPKneOOR/rg==","signatures":[{"sig":"MEUCIFBcv3zfrfwnZ2xGnJ10uhfVFIRv2DcxOsut2KLWYaKSAiEA14/Z4TkzunLmihZ+DQKmb3oibdfgMTfyrmfx8pXMnbM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":187292,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiXqdvACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoSwg//d2ewvSHNke3pUaWo+JzeKTXxpyvay2Qeeb0UN/sugmwbf7ry\r\nAuiudfJOqO4THWMwivvfBBzDmqmYML0jmNakC4ADOQXW+Rq9NH/VYfJ5ry4+\r\ndaXpvaIbgZLWAvP9yMAGx62TH5IVqABotofa/gQZg4OdkWuHRsOCGzxsXMUC\r\nSOH0UG8BFVzIlD/hDGuBcB4GV1gLZJSMM40ADHLzNe23Yc8AbmxCAJpi0yJp\r\nIs7z9wRghhXf6ZCMmkKZySg/n6MmmAGponxx9KuhZRLQhiiGVX4VnB0+F99A\r\nVU+HNeMomUKd8DT695NI7SQf3jg3YF/dkYliQelj0PkesGWdu4l+0jALvnqW\r\nlp3JwEENddes/1Uqy50xqMSs7tGFmTIPQzxW4lbZ+INUWMZvFfH3/mVRWLSi\r\nCKaGmv0kx0RlKBmJkC4tWyZMFpaLYzt+IDbaU+HTPeFRHrfhE54W65AhufND\r\nHHc5duemfxzCU+alRllzeWeJHNjH4yskljNDSZ7J6VjmZGEZkyyCYNy8j1v5\r\nULxBkhnh0mEUjPdINh+k1yvQSRLpZeNxp3gQisEu6pVq3nIwXFIYL80sWnq2\r\n+jBmP8SHhykgV7ZU5rbHiF6JD9sYUcgYwxnL5zQTuePnVv+YqYW0HJ1gHiM9\r\nnEqi29z4g4+445uBREa9QiMv6d4pBOTPdYs=\r\n=5cY5\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"7035ee269055fe19aeb1b7bf7fefa77f5ae1e080","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.5.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.14.2","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.0.6_1650370414898_0.7587925436276737","host":"s3://npm-registry-packages"}},"3.1.0":{"name":"postgres","version":"3.1.0","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.1.0","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"4b4e26c1117bde3c13bbe96472b25da243b07185","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.1.0.tgz","fileCount":26,"integrity":"sha512-yQbJtA7z6SsQuFiF01rmHlkG2gU5IEv9D/Pn2fu8Tz6x3/suNWZs4fIPd59rkL+dfVfhDqYQ7DU3YnUqzEDB5Q==","signatures":[{"sig":"MEUCIQD6L7U2Y99Hb5R+co2gifHoblUe4nhVJApbr6lrxRW8gQIgQkP5Sli/uVYKSIjm5ETERzoXZSUEZMRqH9C6J51sxVQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":190463,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiYwFqACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpHghAAm9tibOMKE/170Wsr4aWdCcr0WTKeVhGeeWPLh2t3wBb4CYPZ\r\nV4ub539t3hrrO/qoTZo9ZuZP2MGgIYw3kkz+Tp/394Qq50aIwphPttsHzDf3\r\nlZqbv1EtKx/Dvcn+YrIIY4ZuQcqFob1TY8zldYFwAPmnySSlgp5RnB5jv4FZ\r\nvaxRP2uJl7sevGKwiyUuknLwRNlF6W6qFJPNKzRGIYtHcnSMZLeJp1g1krLQ\r\nZ2hYAUxOg359d5SOhXeVzVp9h8zPJw2ecv++bT03jPw8AF4nV6MxIBeWTpi8\r\nyEemUrHTDnWREZ/PWFYxyWWqBdnmU2znuH7Pm87TWyM7ACN0eACYRbhDbkrO\r\ndEUcLWv/GffiQqMRi0Kui5ErIPjwBsAYort+JdQ9y9eMPLRLZWhT8PulMKA/\r\nF9aAH9V4a+Kx6zKNT50902/jutRxjfvjzGjMhiJRxvmpa21F5L3t1S8i/I19\r\nl16WLn4RqJR7vWyUJHBShDHylPiYuimB7YMB691cNF6WXgoAdHrjsM8U6nxx\r\nTAXHdticgasEI3gmirm7v+l/qrOjcR6aDUHjHcspbIhiY4VvKuYHjtHoaUgC\r\niKcwHyHM5GJkrcfrqwpPYn85cQowz/AcPXgf4RvjJsUVEpCfOnHJDcKbcevK\r\nyGBv1XsiUyj5k09GxQTTbdQmGjzd6uZTUK8=\r\n=sAtP\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"9628118c9d4574c2095fc8c60a4ce41b95b61ea5","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.5.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.14.2","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.1.0_1650655594374_0.4647209853954155","host":"s3://npm-registry-packages"}},"3.2.0":{"name":"postgres","version":"3.2.0","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.2.0","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"c9ce7e574d73ee803820ee68fd17f5fe9a720964","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.2.0.tgz","fileCount":26,"integrity":"sha512-uif1SW/Dz3TUfWx2ivolmtOLetrkUlseNm9TKgtsm0P+Bkw7Dlf38nYcxfInY/15/NrX1gaNI2vKr3oQGwcsgA==","signatures":[{"sig":"MEUCIAC7j0Fgsd6BqhFcgsjo+cTLy4DwKuYDaKhhQ61AjaxGAiEAjuUMx7xRq7HwN5qY6fCLKdgj9kG2XUkDco9yuU1sD2o=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":194883,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJigRSdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpK1hAAmwUerAf7JmmSv4g20Npb6LSPHZBwG7BEr2JX2iU1bX7vwIb4\r\n8PjJcv2YNtJkrWGTF0AcO71oq70sFiPCi+UDNHCHQDIYUA6Vi42qGSyY6lES\r\n3PQjx7S4ygSd6MTRYMRXQaJuAymwT6PTrRe+ZsQqa8fEU/3rrA9vDUZ9yFCy\r\nyhcZ1vt0R1JDbBLo+Ct7HIx0PeMAana9gSunwo4wimTDqlpv3zLVnGGhGuNX\r\nsS8/X+dNNlmkACXJn8KyTUG0WhBo9tYxd7OnTXmbX8Rax1D50GUSEfcn4nb4\r\njLdbSZFGhh3Ny5nYpWLWNGmbmlgEWhYtunp7rfHmI99/nWYLDaKWDySUda6a\r\nq/e7KsxQAKv2PA49HF7U16Afj+zZzAgprQ+xpMZybriaj/sY8FU3FSBMcAyL\r\nba5zwubmcqoGtBwtcwkfrgKg0nZ6W2mTTcR4BlT/rejED4KK5XtG6nAFjut4\r\nWuzpX/hjWpfBhmuxdupOFW9XAP5lnh0OKLmPV6AUJO965VuGpoVDTjK6Mk09\r\nfmO4pqpGdnX79xRN4dcuqZH/K2MD6WrfHtnUpUyI9RX8o+XuHMUjFPJ/TJK5\r\nmcvorvoE540TAMKTuL4iv418Ep+sWe/XwLvwZ28Q461psLY/ZyLnrrQ3wRsN\r\nLMmOX89OdCDBqPLfgtuQUu5e1Z9EtlHIBZk=\r\n=MAkj\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"1a0cdaec311b23d9627ef4a2b0ffd7fdfd942f28","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.8.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"18.1.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.2.0_1652626588988_0.6709114851126432","host":"s3://npm-registry-packages"}},"3.2.1":{"name":"postgres","version":"3.2.1","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.2.1","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"826158c8debc76e727317766d357cf7ceb152dbc","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.2.1.tgz","fileCount":26,"integrity":"sha512-ttIzXsTX+Nkh062Wh8pHheIYwrJXpOFr3fmAceXc9bF+heHbZTnH8CAXmNqJ4CoYUrB8nOp8aMNaYcrknbVxkw==","signatures":[{"sig":"MEUCIF/C3KQsxoaC+khzN4+aSg0H9B2An0TtrxmBH/DWDdz9AiEA2OHSBXsdRBVpqizySekESqz5+iO8IzCG7i/w9JInxn8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":194947,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJigRjvACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo8vg//XcO1YUJfaRluKgnC1Sp7d1/MaIp4nb34f7DV56WLJ1amEAhP\r\npMD+nmNKAbIJ6OE2HClu9VFMhYH48AKK+FF6ua8/CLMs60TIETtgy9rNjlM6\r\nP2lKpas1Ojvgky3sSV0CdazErhFjLXULVusHqhq2dLn9wl6i+vBmvdee2493\r\nNe9qVm0mhLXX133yuBCWNfb3Td3NV+XS/WXW5MgRvqx3kJhIkOsTV4EVCvXj\r\n1fdInC0dv6WwgcJoCjvN3ZiOCzLTw2YTlIJOmPCPQ2JkSNd1+Iz10oCqgbgJ\r\nEWINpSLL6C8Fvj67+pEZlbrEjKbjBeQst11MtHir7VaG67ygccAkxC0m3S1t\r\n5bH4tYNHOO1NUSmYJPsu/oNmnqs0rfF6KGcqEq2pkLeCXfwL9M5QBxsgZTC/\r\n5YpyFx6SnRD0kruvZ1WAU/GXxKBg6DbzSQ8GmS+HsAN8bNKswYRPkVOZURpu\r\n5Iiey3j3BhEmwXkKrLtd4sLm69vR0V4qUlLJ+s7Wb7XVRGRog1zWRUCHOVhz\r\nvz96YLh8kHS/OAThzqEWYoD4YFUylmkcbvtN7IWpO2my/FICmOTkrZ/PGxHj\r\nW6pCSv7g4NN3Afgau5UUjSXdUBNBT41x07FIm6YntIdv2TlPM907noJ41s/k\r\ntYRy86S1euczBnFKvFK0WCgBY6ZZ3WURBx8=\r\n=gUba\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"8d1691a51cfc047bbc364e88df6e3cf52d72d3bc","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.8.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"18.1.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.2.1_1652627694994_0.7985754553684867","host":"s3://npm-registry-packages"}},"3.2.2":{"name":"postgres","version":"3.2.2","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.2.2","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"c10000d32632ac8265534aca2f77e06862d370dc","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.2.2.tgz","fileCount":26,"integrity":"sha512-/pHzuhHkIV5jxuAt+nV5XgEbsioa5hbvvIDoghY2IGos8JTTBxKjWM9mZpiB3EsGZJOpr22r1UkVr3bYJlVmGw==","signatures":[{"sig":"MEYCIQDc8QBjLRU16rqI1sv2atb8dLJcG02p8SoQk1chtcZ69QIhAIRwks9y+1JTTmHG44XAIx4VeY5KDzN0+L32XgrWsWOh","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":195117,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJigWYpACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp9lA//dxvK9z52YmezVvqtdgYed8PLNJXNPnx0xBv2ozQ0WD/T5zr4\r\nS7aOGrvkzwXkuz6iD+ND2lLcT3CMsrdDPT2cAq5OpJKQgjqQB+GtR3vBAoD9\r\nfuLpr7Q/XCViZTsC4ZySx3cI0EAaNd5s9yZgPoacHCwRixTJwrt+UPcQabj2\r\na25zX/e1JBUphHvKo/edek6NzXdlVTF44OHbP8InJpeeFMsb0ZuAbT8ylQ0l\r\n4if91UhoXSphJNdKYOXA6mh0M+8p1pNdrStRDiFkJNQw0Ms1Ju8YfM6XY0Ur\r\n4QxUiZ/pn8EvPjSiUOmXipaVcn2SQ7NxhRFDXfZFCxOpjxBJ0F0aEyDdIseG\r\nUfLdkKCc3lyd2i8lIzw3NHW7SHt376fenIcR0OHV2hAqagWwRKf1FTpAMsUK\r\ng1sZBt05pg8lyUJURNtNvfqM0BIiQ27l6fduDu+gsSb4MDQCE/PHZO8+uniW\r\nsSu7fEriq1TkoK9SL3iqWpvNlxxxV9GphqkeCrKJwaLSoN6f5kVboSXuhx94\r\nEa5wWTQ5TjX9rZj1JJfzc3kmRfwIHYjFaeQesJMHH5q5awvmi0E6nNxh7w91\r\nrczt2lgEqcfR9MDHjbSY3L0RAIYWDJSvH6+3VHFXXCpj5sd99wQR+ydjR2wa\r\n9V7W81dhepc1UB3zJcq7uQ5cKLnBEk1nHnY=\r\n=OyQc\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"99250a2059df13af1e7d31927173aaab4c9d2bff","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.8.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"18.1.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.2.2_1652647465688_0.9591962742277802","host":"s3://npm-registry-packages"}},"3.2.3":{"name":"postgres","version":"3.2.3","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.2.3","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"ebe2dfc0bcf3e9832a2c87f6223caf9acce80590","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.2.3.tgz","fileCount":26,"integrity":"sha512-tV7Tt2PKEk6WL1WlEqzkkhegwiA9LZak99fBoDL/kVooW9RVQCAT6W2AT9JqQwqtaOdEMKsE6jvo7FL0OS6mJQ==","signatures":[{"sig":"MEUCIQCuGRvFqn3eLus7pY3bENvy11wCASMxu9zltgisboL7rgIgOqlz7ZLxWhP4HG2BtXFfIj+aW4py/KpYPblyicKxqX8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":195096,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiixfAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoRbg/+Kj31445pQXWf7gW7vteXdJ+/eOmid9tfo34FUAdqJBWd+ykb\r\nt2wNtEiNI11h1LLY3UduHr6JjPyBETW+oqK9lP134WOjioNlQbsUyWfSN6hJ\r\nLcaEGXUX1ccxw2S0yPBhohFBzFClx9Ozt8gFihyo4YIiN7I+pJW4ya60bRXg\r\n0BoaYsBmYPVMWSoa1L1i56bzUQH0Ou3Mbl4UyQaRGoVr0mY41iRRQ3kI3mJt\r\nSFEeWnt5azNbQQjFL74/8ShoyEQ0vnH0FhZq64DFGOzPiI7vesOKojnoPx4v\r\nOdQub/a4iKgXdSes6iY0IddkIj4AbbNSavargBMnSCblxGam5sSH6g8CqqNq\r\neU4WCPFHzXxHxkfug7R2F3ANcD4YtZwsFY2Xe4KPmvaBLiQCmQ7UvVgqPEJ4\r\nsEkuIWS4v3x1QzXH9CfyBi9kyvE7xCT1/HHIcxNZhg30wM0P4t3vIIBeQsER\r\nBuZFgMb57cJZB0msUzsfbZBbaj1YjfQmBu9jKQH6l6VjxLm0ICnTff0yGtEz\r\nLNsw6sMAZiAiEOZLAOQTWBvg1ArXecSPdkDZ8H7S4gB4YV+OrZ0HH5n8+CWH\r\nIssGiayWmjb2nb1p2//bsScMTZKfaRstl40KBah0kVK7oQrEwsevDol3plpF\r\nyO+joTUbc73yhgMourR1g8DxdmW7SE78vjA=\r\n=aC31\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"31ccd7b495584c6b4ad0078100019b1d3015ed92","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.8.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"18.1.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.2.3_1653282752234_0.801509507515032","host":"s3://npm-registry-packages"}},"3.2.4":{"name":"postgres","version":"3.2.4","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.2.4","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"3b0a0d69b572bb1736662f68e3bbad4d69fb553c","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.2.4.tgz","fileCount":26,"integrity":"sha512-iscysD+ZlM4A9zj0RS2zo3f4Us4yuov94Yx+p3dE1rEARaBHC8R3/gRq40KEnWp1lxjuFq9EjuAenIUsPaTaDA==","signatures":[{"sig":"MEQCIA3aM+j199kjDaUpt+d0EJfjDNQcIeTJ63R3jzgPh7XrAiBsrc8onOFuHuSEMGCPdTEKweB0R8o0qrKYZLeNAI+AEg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":195569,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJijiWeACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrFBw//ffC+GcMWwEVk1xtBYl390b1ZkiC6a+bQx6Mcm9LxAjc+y568\r\n8lOqWqlbJqVQXM6XDnMtEHwdqe7ldiUsqk759lvWQMbvjA77L4A6sWG6HShT\r\nFApBcR638AGc2DPskhQbdS/2mXWsPwIw/0O4Xx5Qp8GME8AlpDlepYeTVxst\r\nGgQWeCiK6kRyI4N+jTU0Pivf9sxO59TsBeXqmIYbM4R7W/JJtt+NunzdTSRk\r\ncGlIVDMkY802JyWB1RLUuy0+/n42SB/fznVIZ0GM+Go47tDGEsXUq5JkyADG\r\nEzv+v6Tbzb98uQY/NLIoOu5qOd8N8u0hoizdIFHxIqAx3sa5fueGN+Ueb0qN\r\nwLaE+E/x0H75ffbnF6T1KvRK7Z58utPSoizJwPNw0DH+on3tQZmRvuSGBsHL\r\nVawWl1dmLdi/EfTSIdExagMWh/QFRxJtucitCgJlPE6fVIGfY43Caz6TKaDC\r\n0r2ieKo94ie2XxcK/2ad3a7foMEoPKQqMY+5XSDhn8Ep5AmO2cAuuy9Ssphc\r\nIqA4ZkN6L6eCC5jfDRGaPLoNl11RTkD7SKwmyFmi0BBb6ilT+mvBjAFQvkOj\r\nuESIgXfYSHDuUxSDAsVpndCam77K6FsOvRYHoEc068bb6hYDjhwhEFLA2S/A\r\nf3El5WjVfqGX0QrSIf6ST2jGYsHl9i4yxwg=\r\n=CEpQ\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"77a1919e9cc34d7bd90b391035402c22f8ae6b8e","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.5.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.14.2","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.2.4_1653482910372_0.4158958210444921","host":"s3://npm-registry-packages"}},"3.3.0":{"name":"postgres","version":"3.3.0","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.3.0","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"82c9cbff68d3f68ad0e0d337fd1f96906addd105","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.3.0.tgz","fileCount":26,"integrity":"sha512-6bZk3JK1iUP+bEqWzKJh7z3zw1bWHPolzzwj1zu0KBnh2WWsrr48ic8Cy064TU/08poxC0gaZgwcoxr0WDCiCw==","signatures":[{"sig":"MEUCIDgaSA4FEluwFOf2caKbzZ31wpV2xDoRX5ghBGkW5Pr0AiEArRNrQZ7tf0ix78Um5ce0YrkzW4xaRzMnNJ7eNH2Bfd0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":205474,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjN0RsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoR2w/+J/EWy58iS4lHWbkO8ztKYCBtmvcxx/j+Pd+RmrNEzP2vufET\r\nDemcL3tDv1ytrD0+rsKkg79E1OmFK3V4B8FeUyVHj4dVxaGKgSfSedkILZHS\r\nMM+aXwFn0DUU+qd7w+MMer6MaK46wSsh9JWNwTtA8B1u1Bb2i1SgE0GqGcUO\r\nK/7AKfDF5YwFlSYc2YtvqtHyHgMZP72J4djJ0XdS0pvod1BOM5ovaBuOrTh5\r\n0Nn/eEFLquqb26vjRu8RLboXfb0VtuJMVXpMZx3KyH+Hm+YF9AFnXshFLlTo\r\nDU+A6dZ3/3L5C3qzKg5sOjKG0C/1BBGXbqx6fJMJ7cofFn7rG11OxtKlCmhN\r\nPzi+w2tYVwXSea+BLKs4BIy6VJxw7yBlvp4smuK35Bql29udIayoLjUwZmXv\r\nxMdsLWlJ3jqcx2yorImIcJJA/NcH2gCjzP6r5J5QcBqaTL/MVfEOwNs3CK5G\r\n57/Erel31VsxGJYl3bwcBtVxGE/RjnkjVSkN1rKr7jgHS3WLYAbJVwglTltt\r\nWjy4Vk+1UAenwAZ7GwRK0b7tSmerYYtPK0W4ZeqwOqNrvGXFb6OS9VRuABWA\r\nBG6GPR54Y+zx3DXXS2zQ1EWRs7Op5oOKz6GXSsMpZs5chko+USS6LwYiY8x5\r\n1rMle+KT4KKBDdHEyYj8wYNckedvZUpqTEY=\r\n=bPPO\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"types":"./types/index.d.ts","import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"531da5d59bc877aef651786eaabcf914c064cb48","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.15.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.17.1","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.3.0_1664566380189_0.6351469974664985","host":"s3://npm-registry-packages"}},"3.3.1":{"name":"postgres","version":"3.3.1","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.3.1","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"1d9b5e8f01ee325df13b6db14f38ae2b8f6fe912","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.3.1.tgz","fileCount":26,"integrity":"sha512-ak/xXToZYwRvQlZIUtLgPUIggz62eIIbPTgxl/Yl4oTu0TgNOd1CrzTCifsvZ89jBwLvnX6+Ky5frp5HzIBoaw==","signatures":[{"sig":"MEUCIQCOOkT6LzqunMIl7vLIqAG8r8LnU2T8N+GmaqwAz9JK8gIgZ2OdhmdtYe7T+RCz1JohqtasDH2KJQWgucgbzwWDa70=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":205564,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjOmzYACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqIGQ/9FyOBTwlECbKTiOYU3kP1Npd084I66IId7H3w82bX7hhssoKa\r\nN8IoD2iQXpByQGnYk/akFmxJ30f9s9G07lZkZrfp/kq9G6CAFzTfqAQKZAj0\r\nOV9VIsyhA6Fb2Gy5pPjwai1HXBecPzzgm1G5Y/DwmsQh0x6E7Zpql/yochh9\r\nJfAJs/dZMEENEXOfUiSUESU0QV1qWI9QPgug5ScYS+F14IsmYW4CFlt1TxYQ\r\nKUHBCy9o+OZ0hkONtfwSX4UiyXF//emXpSH+eV4x7BwHCWaIfNWDTo10gqRJ\r\nvOEVySAqfKk2ilZncaFOq2CbxDXd3ctGTw2gZh6q2cSWS6q6jsB/baqFEEEp\r\nvD0wZSu5w1rIjfaOjqEbOtu2Doa1Um5266SYgILrxwSmWcrblFK3pJEAv2a/\r\n4WpUg2lkR7dlpwXsN5R/FwvZ1f77Y8kh7dxzYahEKn7KLEb2L/EhnQQ8a+E4\r\nNMDOg1x7yuEJmCcHuxj9iaNk0eBy5UG5vh3AMH/xBid9dRdJA4CB4xFRh4Dp\r\n4IY6gMElBgXKRRWbmSyIJGmAtTFiqkAPstLEmyT6d5cM9KB34SnqmovZKQpr\r\ndDAe0/3XLpjcySq16SN38F+s3qr/+FMLenBnakZIk79OBT51icT5AGr7pRIJ\r\nDaJZVK8jIen2YAv7/+KoGsRi6RnW0bglE/o=\r\n=Ok6d\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"types":"./types/index.d.ts","import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"c521dc860569b2ea9848da87131fa67336005422","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.15.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.17.1","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.3.1_1664773336303_0.6528126733292694","host":"s3://npm-registry-packages"}},"3.3.2":{"name":"postgres","version":"3.3.2","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.3.2","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"91f2e209e4a08ca7101eb7178734e4c0e4d23eb3","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.3.2.tgz","fileCount":26,"integrity":"sha512-NaPqFpUC6C7aCQkJXLvuO/3RKNKL4en8opY53YrcXK3//xXra6CZ2qX6290lxuQ1dW1LbRGYCmsawRlCxSBonQ==","signatures":[{"sig":"MEYCIQCOdD0zL/oM8u1f5iJBq2RAt+TJ4kg5Og4/Ka4cWZsvnQIhALZiy3w/HIXtOLCZe2Dmmlf/mb6DYZVVOlxzVmM2lnOK","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":207389,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjdUy1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpqsA/8DjCfwu9emIPBgDCXHBeT4rvM9RA11QU7SuGZBQucOVHX5F9E\r\nUEEn8FiTZd7dRkzzlwMsNV3UF4TfbUL6J+aQF0B4zqf+mw/yI+nCQG6miB5e\r\neN+BKLPglB81p4B209UbFC1UkMvDRKsZmdZVW+zHAXZwwv3nBqy1d+f5lYAt\r\nMG4Wh5t3SWD2Y3Rf8XRxOIbMPfV9+NmOU7NiFA+AKRmZqUTnB15rtANOQz+L\r\noVE1pG18nJDhYsgpnafu6EVRohqZQlWcP2w1oDF7Bs9oSMS5Hmf5+YKUX1YM\r\n6lleGK8AWaSls6z9rircHl7ltNqT9i+iBtpG2X7WuTllkSzcluL4u3Jqwwld\r\nUh/KPBmtdAUeVLrOrRd1KwRGZKA4s4mvXz61320JWdSV2ULPFfEgHq0fmSpD\r\nE4GbGpZ0j4+VnvFPracLWK7s6WqZAAQXnA330C7bLxcNzWtozsdzl/bHtOzM\r\nkav5g0xu5CcKqR6wT+ae0WUe7VLUXBMXahlS3F6zsX86ikxCwJE3L0yU7WdG\r\nF/ksJ+nZTlpNEBSPyQb9/8Qlp6I0iZpBRT9Fls2mb9eRc8arelzO2eHJDrIE\r\nqQhwA3Tso8EY3GP1CAeU2t+Z6LuHIL6F6Q8wbY8nMNzIWQqMEuUJUhRiSaY/\r\naHdbls8qxwETNsMGHOos4CY23EnIXPBWROI=\r\n=/qT0\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"types":"./types/index.d.ts","import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"000d058fa988d7a0e4c5679a2f84cb83f14ff32f","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.19.2","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"16.18.1","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.3.2_1668631733061_0.8816214119980854","host":"s3://npm-registry-packages"}},"3.3.3":{"name":"postgres","version":"3.3.3","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.3.3","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"f7a394c2edbcfd8ade96921676dccd0d45a1a757","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.3.3.tgz","fileCount":26,"integrity":"sha512-FGLZOpZSXePRIQu6LJpJUDikzuhplWI80uyyfmKBiljpfO+Z4nuClwpq3/dsRnitxVDsgFN5duJ7eUTaC0meQQ==","signatures":[{"sig":"MEYCIQDCtmjYrKrh2IG1FJ7/tX6ZWglhzpqsdaHsDVYw0kDyfAIhAPjFDcOs0uYHSDxa8NtcAiyqOOtzJHNnbX049pCPLBGH","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":208175,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjtClVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrXuw/+NTGFk4Yz9k6W9hIsew4pwHFI1dYTSSfVOKP+igtGNJTTyvQp\r\nslfPsDyIe0SOoTn4HEEkAa5GWO9u0EJ4GVJxMtakDDkZQzz/iOfrSgcxJM8m\r\nvk7tTaub80APKeAzZxMGalF8fePYBuOkmHvNrcdaw3jsAEpj4K+1jApKvJj1\r\n91w8qAnZ7cJwtG27s619oS19j+CmnLhDf8uQVO3YrvyPsXRXEkN5r1IYItQE\r\ntrKn65Q7phrYNzIJ0l59IlvMi08gYOP3TdgpdUWYsDo9c8sg29GNYHHQG67q\r\nz/C55lM/S6f9MNJ/QUbJhRS+5Zz6K6WEdte1bdfF1k97uhg9KVz1Od4TxiuS\r\nzlsjShyDJLs/aVG9qI09CJDNBAkLv0Bi7jx4m3SLnHHGBJgKUM7WEs6tcOAO\r\nD6HrMQbMrbRqqYBtcouY30hSEiYyqxK2ir1IquNuJ+uAGz6BjIzjjP4XWLJ0\r\nXyseUFPlaGXrdp7Nc4gJe0e/NfRLJBBuMAUjb33QEeNPNyhsRtUfvUS8mPkT\r\ni+XnXuVJWIy6zqAakEdqfrWceDwiia1EWo5NQUrC3QM8bJwHWGZx1vrf/SYR\r\njyMXqEX7U0jt6rgrbqiIL4U4QgC2BE6ycdYxLYqjYaCV8MleNU5D0TsWQtj8\r\njQKi9PvnJaYDrT1djL0frTAZKjGNzvAFPaI=\r\n=X9cJ\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"types":"./types/index.d.ts","import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"6778dc9256baebb22f8c7e5c5f2f59d5ba93766e","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"8.19.3","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"18.12.1","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.3.3_1672751445182_0.2768307621752095","host":"s3://npm-registry-packages"}},"3.3.4":{"name":"postgres","version":"3.3.4","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.3.4","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"09635eb9fae26dd449db9b1bd3956ef56c5b78fa","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.3.4.tgz","fileCount":26,"integrity":"sha512-XVu0+d/Y56pl2lSaf0c7V19AhAEfpVrhID1IENWN8nf0xch6hFq6dAov5dtUX6ZD46wfr1TxvLhxLtV8WnNsOg==","signatures":[{"sig":"MEUCIQCyFraHVneiD36v1RShsQDSHjJxEnQMktYlPM8kkePYZwIgTXOBT3c8uJeVzRNTXezXzoHh9ZlBSXK7WktkoKDptG4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":208443,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkB5aNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpn2hAAhaQhETpYvjwisP2npUeRemhRPcpi/kYmahPcwjVeVE8yKsfg\r\nWB5EDn3rFkdS55heZZoyLdnqCa3n9QrUUd9DLAxnjhrY2j9luRLP14tJcor7\r\nZBkeFK4RbQcNUb8RNRVmWT50go3+Nz/XbnzP6hBdZndsUNpnn0RCt5d+l9ho\r\n4dpMQ/LiXdCKv0s5ApFaOJkdjcJvMt0BUsQm+G4ko1Lemc/SIBVpe1hieIyl\r\nfUKw7BdRER/t0n5ECVls5b20cs4LD9ONO0b6i80ntR0JFEisAAvRgDJZWgCT\r\nvMXwJoFC6VQDMFdcoo+pfOjIRkzvT7rvg1B3Q1u365VVnVbr8lelxOCETUm8\r\nW1JXX1cufmxceZ+z/bJaJv2Rcw5j/JQHp7PiUEDEZW6Q3AOuFs2sANW9IYN7\r\nDvYfQuNFHedZPqWAYJ0yCQAy4syxG82F10IxvSJPK5ZBNq1XMUKf1MUeApiq\r\npmajiipAwyecszV4VlomxoG5OsuMQA8GPnHF+VRG2x71v3ktCzHT2R00TnA4\r\nSljKeS2GD5XjDsn68Hb3UHVoiTejOJ8+UdDgNjHXcj26vJy3ol6DWNOeJgkH\r\nAvS9HHJmsdCN8LHyRpynNqZkNqdY8L6rYCYUY24q/e1erh3sT/u/aNWD8IgB\r\nEbBO1Nms5OyTBZR9QnDu3mRB9M5khEIBuAM=\r\n=9mao\r\n-----END PGP SIGNATURE-----\r\n"},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"types":"./types/index.d.ts","import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"f68e345c571bda4a0da3777891b804e3a900c9b4","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"9.5.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"18.14.2","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.3.4_1678218893474_0.0325560320099203","host":"s3://npm-registry-packages"}},"3.3.5":{"name":"postgres","version":"3.3.5","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.3.5","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"8431605aae2112759d50e362fc08759165455677","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.3.5.tgz","fileCount":26,"integrity":"sha512-+JD93VELV9gHkqpV5gdL5/70HdGtEw4/XE1S4BC8f1mcPmdib3K5XsKVbnR1XcAyC41zOnifJ+9YRKxdIsXiUw==","signatures":[{"sig":"MEYCIQDs4fKx4QUdJVGGF40CJNdDGnaWkwcibSNWFk+txHi14wIhAJSR2WMvkhDuIfQmpNjW14GVnZMsJP9Oz9qdRQvs2Ewx","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":210039},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"types":"./types/index.d.ts","import":"./src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"5862a7d812d790e2affbf85abab4d3ed1ad06e6e","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno","prepare":"npm run build","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"9.5.1","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"18.16.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.3.5_1685519850909_0.8061100802030559","host":"s3://npm-registry-packages"}},"3.4.0":{"name":"postgres","version":"3.4.0","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.4.0","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"c1a6fa938e769290b9e3b5134323a39cf57b51f3","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.4.0.tgz","fileCount":37,"integrity":"sha512-d7UtSoCg4hUtzxM9aRi3J8BrM6t0h4bQmgAHG96cDCNpP9CnnWQRdRl7WWNvKs0oOaQU2InGoOi1jETmdZK02g==","signatures":[{"sig":"MEUCIQDWvMQPaBRqIz572iN50/GbP0oeorTBC71I6bzlsgg+cwIge717p0Xq3cQ+TKhDT0FxQ7vax1tqfFeOZAmeNPY4Mf8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":292648},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","exports":{"types":"./types/index.d.ts","import":"./src/index.js","worker":"./cf/src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"0428b30937400a7dadc8ed09587c44ef917052a6","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno && npm run build:cf","prepare":"npm run build","build:cf":"node transpile.cf.js","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"10.1.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"20.8.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.4.0_1696963645880_0.3428647353335501","host":"s3://npm-registry-packages"}},"3.4.1":{"name":"postgres","version":"3.4.1","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.4.1","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"f1446241cd6d6ce158b5104e62b39eea02b2b9ad","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.4.1.tgz","fileCount":37,"integrity":"sha512-Wasjv6WEzrZXbwKByR2RGD7MBfj7VBqco3hYWz8ifzSAp6tb2L6MlmcKFzkmgV1jT7/vKlcSa+lxXZeTdeVMzQ==","signatures":[{"sig":"MEUCIG5Wlejp9yaaBk6gh8I7sF4KdyFMDl0xfo/pWl3Arz96AiEAqPJMjS4i+lAoZYIch/9oSj7qUWKrJbZh6+P5zBkzrns=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":293194},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","engines":{"node":">=12"},"exports":{"bun":"./src/index.js","types":"./types/index.d.ts","import":"./src/index.js","worker":"./cf/src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"428475aa0ced9234e8b7dd76daa3c91907ece08c","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno && npm run build:cf","prepare":"npm run build","build:cf":"node transpile.cf.js","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"10.1.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"20.8.1","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.4.1_1698097060160_0.6040832412188133","host":"s3://npm-registry-packages"}},"3.4.2":{"name":"postgres","version":"3.4.2","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.4.2","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"979d2758459c9348bdca79b397ace45d9ebda47d","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.4.2.tgz","fileCount":37,"integrity":"sha512-0UcCGvDBSaAzLeWwiq+QVmiGfOPTosFb+sxJUUtd+7Pi/ByFPuz6Gq05LbS0sM1ghMWC5atuks3pfl34g0qmFw==","signatures":[{"sig":"MEYCIQCnZ+D0JJuyMDun/ylyNkRNWNeOgazQI8EH+31S+ha0KAIhALCxzYD2HVU2daWjslqvzftQMG+oCCxjH0IBFoe1W09Y","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":295445},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","engines":{"node":">=12"},"exports":{"bun":"./src/index.js","types":"./types/index.d.ts","import":"./src/index.js","worker":"./cf/src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"b25274c546d562f24ea2c60b030acb23f51d4400","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno && npm run build:cf","prepare":"npm run build","build:cf":"node transpile.cf.js","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"10.1.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"20.8.1","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.4.2_1698422308547_0.06297019565076334","host":"s3://npm-registry-packages"}},"3.4.3":{"name":"postgres","version":"3.4.3","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.4.3","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"52a0712cd6c2dae5e9f8c35b5c7b33434caa66ed","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.4.3.tgz","fileCount":37,"integrity":"sha512-iHJn4+M9vbTdHSdDzNkC0crHq+1CUdFhx+YqCE+SqWxPjm+Zu63jq7yZborOBF64c8pc58O5uMudyL1FQcHacA==","signatures":[{"sig":"MEUCIQDQey6+xDZ4lijwyOEr58GXd0qn+sEtxu+eO+byXfzQUgIgWALZHXQdr+sS3YAa9DfiCx3x1P+q3HJhBmYnNmywOCE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":295727},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","engines":{"node":">=12"},"exports":{"bun":"./src/index.js","types":"./types/index.d.ts","import":"./src/index.js","worker":"./cf/src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"61c4d5b1d840ed1e3e0f8e84556544a33ee04149","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno && npm run build:cf","prepare":"npm run build","build:cf":"node transpile.cf.js","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"10.1.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"20.9.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.4.3_1698911118354_0.5663712805400771","host":"s3://npm-registry-packages"}},"3.4.4":{"name":"postgres","version":"3.4.4","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.4.4","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"adbe08dc1fff0dea3559aa4f83ded70a289a6cb8","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.4.4.tgz","fileCount":37,"integrity":"sha512-IbyN+9KslkqcXa8AO9fxpk97PA4pzewvpi2B3Dwy9u4zpV32QicaEdgmF3eSQUzdRk7ttDHQejNgAEr4XoeH4A==","signatures":[{"sig":"MEUCIQCKmrUw/3ny5TLxYhG9W/BhuDbPIMcztZ4HjpdkDZ3UlQIgftP6JXmLPbez9taHCPYZu/n5xA29/lZYPLHvwQrsyQs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":296100},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","engines":{"node":">=12"},"exports":{"bun":"./src/index.js","types":"./types/index.d.ts","import":"./src/index.js","worker":"./cf/src/index.js","default":"./cjs/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"3eb40995fe8d878b40a69ce75fedf55f7c298ce0","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno && npm run build:cf","prepare":"npm run build","build:cf":"node transpile.cf.js","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"10.2.4","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"20.11.1","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.4.4_1711054295730_0.6254411149592722","host":"s3://npm-registry-packages"}},"3.4.5":{"name":"postgres","version":"3.4.5","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.4.5","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"1ef99e51b0ba9b53cbda8a215dd406725f7d15f9","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.4.5.tgz","fileCount":37,"integrity":"sha512-cDWgoah1Gez9rN3H4165peY9qfpEo+SA61oQv65O3cRUE1pOEoJWwddwcqKE8XZYjbblOJlYDlLV4h67HrEVDg==","signatures":[{"sig":"MEQCIHbw8sO/OWEpcQm74pCzibaonlHanKG43rBQMJFC+zjpAiA4GhIgCZsgT+AFcXsx1e68yn2CL4dhD7KRFPdHMdolIg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":296225},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","engines":{"node":">=12"},"exports":{"bun":"./src/index.js","types":"./types/index.d.ts","import":"./src/index.js","default":"./cjs/src/index.js","workerd":"./cf/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"b231b688489212e40ab54e9870f84f55f2be5dd0","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno && npm run build:cf","prepare":"npm run build","build:cf":"node transpile.cf.js","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"10.8.3","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"22.9.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.4.5_1729845794200_0.24963974862812766","host":"s3://npm-registry-packages"}},"3.4.6":{"name":"postgres","version":"3.4.6","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.4.6","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"075690d2568d7727c2cca565005135b8b90907be","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.4.6.tgz","fileCount":37,"integrity":"sha512-MXrZVqgUfiirfZ0MqQqXqZQa6oM5OWFjfuaHVKl7v2zW25LnOJeLpQk+UUW0ZuP94fcS+fZVqyDYm9v5SIJ11Q==","signatures":[{"sig":"MEYCIQCfsVQW2pQl1T2e2nlc5KxzqwLg46cx0An2ZwBN7WnPoAIhANQsnTsxMrF4uPEp8cabrMPPLrfqmdsKd7/SsLEZCJYy","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":297673},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","engines":{"node":">=12"},"exports":{"bun":"./src/index.js","types":"./types/index.d.ts","import":"./src/index.js","default":"./cjs/src/index.js","workerd":"./cf/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"ca4da7ca56a5fad7a4fd495c9e640c66f325bc45","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno && npm run build:cf","prepare":"npm run build","build:cf":"node transpile.cf.js","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --no-lock --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"11.4.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"22.11.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.4.6_1747784454241_0.8021529426154799","host":"s3://npm-registry-packages-npm-production"},"deprecated":"Had .reserve() regression fixed in 3.4.7"},"3.4.7":{"name":"postgres","version":"3.4.7","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","_id":"postgres@3.4.7","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"homepage":"https://github.com/porsager/postgres","bugs":{"url":"https://github.com/porsager/postgres/issues"},"dist":{"shasum":"122f460a808fe300cae53f592108b9906e625345","tarball":"https://registry.npmjs.org/postgres/-/postgres-3.4.7.tgz","fileCount":37,"integrity":"sha512-Jtc2612XINuBjIl/QTWsV5UvE8UHuNblcO3vVADSrKsrc6RqGX6lOW1cEo3CM2v0XG4Nat8nI+YM7/f26VxXLw==","signatures":[{"sig":"MEQCIGH8SkorHQJmtfB8BEpKkuggLLIB3LL/sfnjW/m3ZqcvAiAQdsQGOdud7EkzYYwaqeoXUGonXaoHHTkydeAAB2OxVA==","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":297724},"main":"cjs/src/index.js","type":"module","types":"types/index.d.ts","module":"src/index.js","engines":{"node":">=12"},"exports":{"bun":"./src/index.js","types":"./types/index.d.ts","import":"./src/index.js","default":"./cjs/src/index.js","workerd":"./cf/src/index.js"},"funding":{"url":"https://github.com/sponsors/porsager","type":"individual"},"gitHead":"9b92b65da6a5121545581a6dd5de859c2a70177f","scripts":{"lint":"eslint src && eslint tests","test":"npm run test:esm && npm run test:cjs && npm run test:deno","build":"npm run build:cjs && npm run build:deno && npm run build:cf","prepare":"npm run build","build:cf":"node transpile.cf.js","test:cjs":"npm run build:cjs && cd cjs/tests && node index.js && cd ../../","test:esm":"node tests/index.js","build:cjs":"node transpile.cjs","test:deno":"npm run build:deno && cd deno/tests && deno run --no-lock --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../","build:deno":"node transpile.deno.js","prepublishOnly":"npm run lint"},"typings":"types/index.d.ts","_npmUser":{"name":"porsager","email":"rasmus@porsager.com"},"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"_npmVersion":"11.4.0","description":"Fastest full featured PostgreSQL client for Node.js","directories":{},"_nodeVersion":"22.11.0","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/postgres_3.4.7_1747844246473_0.7093712009733832","host":"s3://npm-registry-packages-npm-production"}}},"time":{"created":"2015-01-01T00:00:00.000Z","modified":"2025-05-21T20:49:55.580Z","0.0.1":"2015-01-01T00:00:00.000Z","1.0.0":"2019-12-22T16:51:54.256Z","1.0.1":"2020-01-03T15:28:52.028Z","1.0.2":"2020-01-21T20:32:30.626Z","2.0.0-beta.0":"2020-06-14T11:46:44.671Z","2.0.0-beta.1":"2020-09-29T08:53:27.900Z","2.0.0-beta.2":"2020-10-02T13:43:08.284Z","2.0.0-beta.3":"2021-01-19T08:40:09.982Z","2.0.0-beta.4":"2021-02-12T09:22:13.220Z","2.0.0-beta.5":"2021-04-12T08:58:07.753Z","2.0.0-beta.6":"2021-07-07T07:40:06.731Z","2.0.0-beta.7":"2021-08-16T08:26:19.459Z","2.0.0-beta.8":"2021-08-28T22:32:33.537Z","2.0.0-beta.9":"2021-09-19T20:29:03.678Z","2.0.0-beta.10":"2021-09-29T11:43:10.300Z","2.0.0-beta.11":"2021-11-17T13:37:03.711Z","3.0.0-rc.1":"2022-03-20T22:19:57.973Z","3.0.0-rc.2":"2022-03-23T21:30:48.266Z","3.0.0-rc.3":"2022-03-24T18:40:24.977Z","3.0.0":"2022-03-24T18:49:47.851Z","3.0.1":"2022-03-30T20:09:58.254Z","3.0.2":"2022-03-31T12:07:37.271Z","3.0.3":"2022-04-04T10:59:36.272Z","3.0.4":"2022-04-05T09:41:53.385Z","3.0.5":"2022-04-06T17:49:18.903Z","3.0.6":"2022-04-19T12:13:35.085Z","3.1.0":"2022-04-22T19:26:34.495Z","3.2.0":"2022-05-15T14:56:29.152Z","3.2.1":"2022-05-15T15:14:55.190Z","3.2.2":"2022-05-15T20:44:25.817Z","3.2.3":"2022-05-23T05:12:32.376Z","3.2.4":"2022-05-25T12:48:30.545Z","3.3.0":"2022-09-30T19:33:00.381Z","3.3.1":"2022-10-03T05:02:16.494Z","3.3.2":"2022-11-16T20:48:53.222Z","3.3.3":"2023-01-03T13:10:45.364Z","3.3.4":"2023-03-07T19:54:53.665Z","3.3.5":"2023-05-31T07:57:31.137Z","3.4.0":"2023-10-10T18:47:26.111Z","3.4.1":"2023-10-23T21:37:40.504Z","3.4.2":"2023-10-27T15:58:28.869Z","3.4.3":"2023-11-02T07:45:18.665Z","3.4.4":"2024-03-21T20:51:35.928Z","3.4.5":"2024-10-25T08:43:14.383Z","3.4.6":"2025-05-20T23:40:54.511Z","3.4.7":"2025-05-21T16:17:26.674Z"},"bugs":{"url":"https://github.com/porsager/postgres/issues"},"author":{"url":"https://www.porsager.com","name":"Rasmus Porsager","email":"rasmus@porsager.com"},"license":"Unlicense","homepage":"https://github.com/porsager/postgres","keywords":["driver","postgresql","postgres.js","postgres","postrges","postgre","client","sql","db","pg","database"],"repository":{"url":"git+https://github.com/porsager/postgres.git","type":"git"},"description":"Fastest full featured PostgreSQL client for Node.js","maintainers":[{"name":"porsager","email":"rasmus@porsager.com"}],"readme":"<img align=\"left\" width=\"440\" height=\"180\" alt=\"Fastest full PostgreSQL nodejs client\" src=\"https://raw.githubusercontent.com/porsager/postgres/master/postgresjs.svg?sanitize=true\">\n\n- [🚀 Fastest full-featured node & deno client](https://github.com/porsager/postgres-benchmarks#results)\n- 🏷 ES6 Tagged Template Strings at the core\n- 🏄‍♀️ Simple surface API\n- 🖊️ Dynamic query support\n- 💬 Chat and help on [Gitter](https://gitter.im/porsager/postgres)\n- 🐦 Follow on [Twitter](https://twitter.com/rporsager)\n\n<br>\n\n## Getting started\n\n<br>\n<img height=\"220\" width=\"458\" alt=\"Good UX with Postgres.js\" src=\"https://raw.githubusercontent.com/porsager/postgres/master/demo.gif\">\n<br>\n\n### Installation\n```bash\n$ npm install postgres\n```\n\n### Usage\nCreate your `sql` database instance\n```js\n// db.js\nimport postgres from 'postgres'\n\nconst sql = postgres({ /* options */ }) // will use psql environment variables\n\nexport default sql\n```\n\nSimply import for use elsewhere\n```js\n// users.js\nimport sql from './db.js'\n\nasync function getUsersOver(age) {\n  const users = await sql`\n    select\n      name,\n      age\n    from users\n    where age > ${ age }\n  `\n  // users = Result [{ name: \"Walter\", age: 80 }, { name: 'Murray', age: 68 }, ...]\n  return users\n}\n\n\nasync function insertUser({ name, age }) {\n  const users = await sql`\n    insert into users\n      (name, age)\n    values\n      (${ name }, ${ age })\n    returning name, age\n  `\n  // users = Result [{ name: \"Murray\", age: 68 }]\n  return users\n}\n```\n\n#### ESM dynamic imports\n\nThe library can be used with ESM dynamic imports as well as shown here.\n\n```js\nconst { default: postgres } = await import('postgres')\n```\n\n## Table of Contents\n\n* [Connection](#connection)\n* [Queries](#queries)\n* [Building queries](#building-queries)\n* [Advanced query methods](#advanced-query-methods)\n* [Transactions](#transactions)\n* [Data Transformation](#data-transformation)\n* [Listen & notify](#listen--notify)\n* [Realtime subscribe](#realtime-subscribe)\n* [Numbers, bigint, numeric](#numbers-bigint-numeric)\n* [Result Array](#result-array)\n* [Connection details](#connection-details)\n* [Custom Types](#custom-types)\n* [Teardown / Cleanup](#teardown--cleanup)\n* [Error handling](#error-handling)\n* [TypeScript support](#typescript-support)\n* [Reserving connections](#reserving-connections)\n* [Changelog](./CHANGELOG.md)\n\n\n## Connection\n\n### `postgres([url], [options])`\n\nYou can use either a `postgres://` url connection string or the options to define your database connection properties. Options in the object will override any present in the url. Options will fall back to the same environment variables as psql.\n\n```js\nconst sql = postgres('postgres://username:password@host:port/database', {\n  host                 : '',            // Postgres ip address[s] or domain name[s]\n  port                 : 5432,          // Postgres server port[s]\n  database             : '',            // Name of database to connect to\n  username             : '',            // Username of database user\n  password             : '',            // Password of database user\n  ...and more\n})\n```\n\nMore options can be found in the [Connection details section](#connection-details).\n\n## Queries\n\n### ```await sql`...` -> Result[]```\n\nPostgres.js utilizes [Tagged template functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates) to process query parameters **before** interpolation. Using tagged template literals benefits developers by:\n\n1. **Enforcing** safe query generation\n2. Giving the ` sql`` ` function powerful [utility](#dynamic-inserts) and [query building](#building-queries) features.\n\nAny generic value will be serialized according to an inferred type, and replaced by a PostgreSQL protocol placeholder `$1, $2, ...`. The parameters are then sent separately to the database which handles escaping & casting.\n\nAll queries will return a `Result` array, with objects mapping column names to each row.\n\n```js\nconst xs = await sql`\n  insert into users (\n    name, age\n  ) values (\n    'Murray', 68\n  )\n\n  returning *\n`\n\n// xs = [{ user_id: 1, name: 'Murray', age: 68 }]\n```\n\n> Please note that queries are first executed when `awaited` – or instantly by using [`.execute()`](#execute).\n\n### Query parameters\n\nParameters are automatically extracted and handled by the database so that SQL injection isn't possible. No special handling is necessary, simply use tagged template literals as usual.\n\n```js\nconst name = 'Mur'\n    , age = 60\n\nconst users = await sql`\n  select\n    name,\n    age\n  from users\n  where\n    name like ${ name + '%' }\n    and age > ${ age }\n`\n// users = [{ name: 'Murray', age: 68 }]\n```\n\n> Be careful with quotation marks here. Because Postgres infers column types, you do not need to wrap your interpolated parameters in quotes like `'${name}'`. This will cause an error because the tagged template replaces `${name}` with `$1` in the query string, leaving Postgres to do the interpolation. If you wrap that in a string, Postgres will see `'$1'` and interpret it as a string as opposed to a parameter.\n\n### Dynamic column selection\n\n```js\nconst columns = ['name', 'age']\n\nawait sql`\n  select\n    ${ sql(columns) }\n  from users\n`\n\n// Which results in:\nselect \"name\", \"age\" from users\n```\n\n### Dynamic inserts\n\n```js\nconst user = {\n  name: 'Murray',\n  age: 68\n}\n\nawait sql`\n  insert into users ${\n    sql(user, 'name', 'age')\n  }\n`\n\n// Which results in:\ninsert into users (\"name\", \"age\") values ($1, $2)\n\n// The columns can also be given with an array\nconst columns = ['name', 'age']\n\nawait sql`\n  insert into users ${\n    sql(user, columns)\n  }\n`\n```\n\n**You can omit column names and simply execute `sql(user)` to get all the fields from the object as columns**. Be careful not to allow users to supply columns that you do not want to be inserted.\n\n#### Multiple inserts in one query\nIf you need to insert multiple rows at the same time it's also much faster to do it with a single `insert`. Simply pass an array of objects to `sql()`.\n\n```js\nconst users = [{\n  name: 'Murray',\n  age: 68,\n  garbage: 'ignore'\n},\n{\n  name: 'Walter',\n  age: 80\n}]\n\nawait sql`insert into users ${ sql(users, 'name', 'age') }`\n\n// Is translated to:\ninsert into users (\"name\", \"age\") values ($1, $2), ($3, $4)\n\n// Here you can also omit column names which will use object keys as columns\nawait sql`insert into users ${ sql(users) }`\n\n// Which results in:\ninsert into users (\"name\", \"age\") values ($1, $2), ($3, $4)\n```\n\n### Dynamic columns in updates\nThis is also useful for update queries\n```js\nconst user = {\n  id: 1,\n  name: 'Murray',\n  age: 68\n}\n\nawait sql`\n  update users set ${\n    sql(user, 'name', 'age')\n  }\n  where user_id = ${ user.id }\n`\n\n// Which results in:\nupdate users set \"name\" = $1, \"age\" = $2 where user_id = $3\n\n// The columns can also be given with an array\nconst columns = ['name', 'age']\n\nawait sql`\n  update users set ${\n    sql(user, columns)\n  }\n  where user_id = ${ user.id }\n`\n```\n\n### Multiple updates in one query\nTo create multiple updates in a single query, it is necessary to use arrays instead of objects to ensure that the order of the items correspond with the column names.\n```js\nconst users = [\n  [1, 'John', 34],\n  [2, 'Jane', 27],\n]\n\nawait sql`\n  update users set name = update_data.name, age = (update_data.age)::int\n  from (values ${sql(users)}) as update_data (id, name, age)\n  where users.id = (update_data.id)::int\n  returning users.id, users.name, users.age\n`\n```\n\n### Dynamic values and `where in`\nValue lists can also be created dynamically, making `where in` queries simple too.\n```js\nconst users = await sql`\n  select\n    *\n  from users\n  where age in ${ sql([68, 75, 23]) }\n`\n```\n\nor\n```js\nconst [{ a, b, c }] = await sql`\n  select\n    *\n  from (values ${ sql(['a', 'b', 'c']) }) as x(a, b, c)\n`\n```\n\n## Building queries\n\nPostgres.js features a simple dynamic query builder by conditionally appending/omitting query fragments.\nIt works by nesting ` sql`` ` fragments within other ` sql`` ` calls or fragments. This allows you to build dynamic queries safely without risking sql injections through usual string concatenation.\n\n### Partial queries\n```js\nconst olderThan = x => sql`and age > ${ x }`\n\nconst filterAge = true\n\nawait sql`\n  select\n   *\n  from users\n  where name is not null ${\n    filterAge\n      ? olderThan(50)\n      : sql``\n  }\n`\n// Which results in:\nselect * from users where name is not null\n// Or\nselect * from users where name is not null and age > 50\n```\n\n### Dynamic filters\n```js\nawait sql`\n  select\n    *\n  from users ${\n    id\n      ? sql`where user_id = ${ id }`\n      : sql``\n  }\n`\n\n// Which results in:\nselect * from users\n// Or\nselect * from users where user_id = $1\n```\n\n### Dynamic ordering\n\n```js\nconst id = 1\nconst order = {\n  username: 'asc'\n  created_at: 'desc'\n}\nawait sql`\n  select \n    * \n  from ticket \n  where account = ${ id }  \n  order by ${\n    Object.entries(order).flatMap(([column, order], i) =>\n      [i ? sql`,` : sql``, sql`${ sql(column) } ${ order === 'desc' ? sql`desc` : sql`asc` }`]\n    )\n  }\n`\n```\n\n### SQL functions\nUsing keywords or calling functions dynamically is also possible by using ``` sql`` ``` fragments.\n```js\nconst date = null\n\nawait sql`\n  update users set updated_at = ${ date || sql`now()` }\n`\n\n// Which results in:\nupdate users set updated_at = now()\n```\n\n### Table names\nDynamic identifiers like table names and column names is also supported like so:\n```js\nconst table = 'users'\n    , column = 'id'\n\nawait sql`\n  select ${ sql(column) } from ${ sql(table) }\n`\n\n// Which results in:\nselect \"id\" from \"users\"\n```\n\n### Quick primer on interpolation\n\nHere's a quick oversight over all the ways to do interpolation in a query template string:\n\n| Interpolation syntax       | Usage                         | Example                                                   |\n| -------------              | -------------                 | -------------                                             |\n| `${ sql`` }`               | for keywords or sql fragments | ``await sql`SELECT * FROM users ${sql`order by age desc` }` ``  |\n| `${ sql(string) }`         | for identifiers               | ``await sql`SELECT * FROM ${sql('table_name')` ``               |\n| `${ sql([] or {}, ...) }`  | for helpers                   | ``await sql`INSERT INTO users ${sql({ name: 'Peter'})}` ``      |\n| `${ 'somevalue' }`         | for values                    | ``await sql`SELECT * FROM users WHERE age = ${42}` ``           |\n\n## Advanced query methods\n\n### Cursors\n\n#### ```await sql``.cursor([rows = 1], [fn])```\n\nUse cursors if you need to throttle the amount of rows being returned from a query. You can use a cursor either as an [async iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of) or with a callback function. For a callback function new results won't be requested until the promise / async callback function has resolved.\n\n##### callback function\n```js\nawait sql`\n  select\n    *\n  from generate_series(1,4) as x\n`.cursor(async([row]) => {\n  // row = { x: 1 }\n  await http.request('https://example.com/wat', { row })\n})\n```\n\n##### for await...of\n```js\n// for await...of\nconst cursor = sql`select * from generate_series(1,4) as x`.cursor()\n\nfor await (const [row] of cursor) {\n  // row = { x: 1 }\n  await http.request('https://example.com/wat', { row })\n}\n```\n\nA single row will be returned by default, but you can also request batches by setting the number of rows desired in each batch as the first argument to `.cursor`:\n```js\nawait sql`\n  select\n    *\n  from generate_series(1,1000) as x\n`.cursor(10, async rows => {\n  // rows = [{ x: 1 }, { x: 2 }, ... ]\n  await Promise.all(rows.map(row =>\n    http.request('https://example.com/wat', { row })\n  ))\n})\n```\n\nIf an error is thrown inside the callback function no more rows will be requested and the outer promise will reject with the thrown error.\n\nYou can close the cursor early either by calling `break` in the `for await...of` loop, or by returning the token `sql.CLOSE` from the callback function.\n\n```js\nawait sql`\n  select * from generate_series(1,1000) as x\n`.cursor(row => {\n  return Math.random() > 0.9 && sql.CLOSE // or sql.END\n})\n```\n\n### Instant iteration\n\n#### ```await sql``.forEach(fn)```\n\nIf you want to handle rows returned by a query one by one, you can use `.forEach` which returns a promise that resolves once there are no more rows.\n```js\nawait sql`\n  select created_at, name from events\n`.forEach(row => {\n  // row = { created_at: '2019-11-22T14:22:00Z', name: 'connected' }\n})\n\n// No more rows\n```\n\n### Query Descriptions\n#### ```await sql``.describe() -> Result[]```\n\nRather than executing a given query, `.describe` will return information utilized in the query process. This information can include the query identifier, column types, etc.\n\nThis is useful for debugging and analyzing your Postgres queries. Furthermore, **`.describe` will give you access to the final generated query string that would be executed.**\n\n### Rows as Array of Values\n#### ```sql``.values()```\n\nUsing `.values` will return rows as an array of values for each column, instead of objects.\n\nThis can be useful to receive identically named columns, or for specific performance/transformation reasons. The column definitions are still included on the result array, plus access to parsers for each column.\n\n### Rows as Raw Array of Buffers\n#### ```sql``.raw()```\n\nUsing `.raw` will return rows as an array with `Buffer` values for each column, instead of objects.\n\nThis can be useful for specific performance/transformation reasons. The column definitions are still included on the result array, plus access to parsers for each column.\n\n### Queries in Files\n#### `await sql.file(path, [args], [options]) -> Result[]`\n\nUsing a file for a query is also supported with optional parameters to use if the file includes `$1, $2, etc`\n\n```js\nconst result = await sql.file('query.sql', ['Murray', 68])\n```\n\n### Multiple statements in one query\n#### ```await sql``.simple()```\n\nThe postgres wire protocol supports [\"simple\"](https://www.postgresql.org/docs/current/protocol-flow.html#id-1.10.6.7.4) and [\"extended\"](https://www.postgresql.org/docs/current/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY) queries. \"simple\" queries supports multiple statements, but does not support any dynamic parameters. \"extended\" queries support parameters but only one statement. To use \"simple\" queries you can use\n```sql``.simple()```. That will create it as a simple query.\n\n```js\nawait sql`select 1; select 2;`.simple()\n```\n\n### Copy to/from as Streams\n\nPostgres.js supports [`COPY ...`](https://www.postgresql.org/docs/14/sql-copy.html) queries, which are exposed as [Node.js streams](https://nodejs.org/api/stream.html).\n\n#### ```await sql`copy ... from stdin`.writable() -> Writable```\n\n```js\nimport { pipeline } from 'node:stream/promises'\n\n// Stream of users with the default tab delimitated cells and new-line delimitated rows\nconst userStream = Readable.from([\n  'Murray\\t68\\n',\n  'Walter\\t80\\n'\n])\n\nconst query = await sql`copy users (name, age) from stdin`.writable()\nawait pipeline(userStream, query);\n```\n\n#### ```await sql`copy ... to stdout`.readable() -> Readable```\n\n##### Using Stream Pipeline\n```js\nimport { pipeline } from 'node:stream/promises'\nimport { createWriteStream } from 'node:fs'\n\nconst readableStream = await sql`copy users (name, age) to stdout`.readable()\nawait pipeline(readableStream, createWriteStream('output.tsv'))\n// output.tsv content: `Murray\\t68\\nWalter\\t80\\n`\n```\n\n##### Using `for await...of`\n```js\nconst readableStream = await sql`\n  copy (\n    select name, age\n    from users\n    where age = 68\n  ) to stdout\n`.readable()\nfor await (const chunk of readableStream) {\n  // chunk.toString() === `Murray\\t68\\n`\n}\n```\n\n> **NOTE** This is a low-level API which does not provide any type safety. To make this work, you must match your [`copy query` parameters](https://www.postgresql.org/docs/14/sql-copy.html) correctly to your [Node.js stream read or write](https://nodejs.org/api/stream.html) code. Ensure [Node.js stream backpressure](https://nodejs.org/en/learn/modules/backpressuring-in-streams) is handled correctly to avoid memory exhaustion.\n\n### Canceling Queries in Progress\n\nPostgres.js supports, [canceling queries in progress](https://www.postgresql.org/docs/7.1/protocol-protocol.html#AEN39000). It works by opening a new connection with a protocol level startup message to cancel the current query running on a specific connection. That means there is no guarantee that the query will be canceled, and due to the possible race conditions it might even result in canceling another query. This is fine for long running queries, but in the case of high load and fast queries it might be better to simply ignore results instead of canceling.\n\n```js\nconst query = sql`select pg_sleep 100`.execute()\nsetTimeout(() => query.cancel(), 100)\nconst result = await query\n```\n\n### Execute\n\n#### ```await sql``.execute()```\n\nThe lazy Promise implementation in Postgres.js is what allows it to distinguish [Nested Fragments](#building-queries) from the main outer query. This also means that queries are always executed at the earliest in the following tick. If you have a specific need to execute the query in the same tick, you can call `.execute()`\n\n### Unsafe raw string queries\n\n<details>\n<summary>Advanced unsafe use cases</summary>\n\n### `await sql.unsafe(query, [args], [options]) -> Result[]`\n\nIf you know what you're doing, you can use `unsafe` to pass any string you'd like to postgres. Please note that this can lead to SQL injection if you're not careful.\n\n```js\nsql.unsafe('select ' + danger + ' from users where id = ' + dragons)\n```\n\nBy default, `sql.unsafe` assumes the `query` string is sufficiently dynamic that prepared statements do not make sense, and so defaults them to off. If you'd like to re-enable prepared statements, you can pass `{ prepare: true }`.\n\nYou can also nest `sql.unsafe` within a safe `sql` expression.  This is useful if only part of your fraction has unsafe elements.\n\n```js\nconst triggerName = 'friend_created'\nconst triggerFnName = 'on_friend_created'\nconst eventType = 'insert'\nconst schema_name = 'app'\nconst table_name = 'friends'\n\nawait sql`\n  create or replace trigger ${sql(triggerName)}\n  after ${sql.unsafe(eventType)} on ${sql.unsafe(`${schema_name}.${table_name}`)}\n  for each row\n  execute function ${sql(triggerFnName)}()\n`\n\nawait sql`\n  create role friend_service with login password ${sql.unsafe(`'${password}'`)}\n`\n```\n\n</details>\n\n## Transactions\n\n#### BEGIN / COMMIT `await sql.begin([options = ''], fn) -> fn()`\n\nUse `sql.begin` to start a new transaction. Postgres.js will reserve a connection for the transaction and supply a scoped `sql` instance for all transaction uses in the callback function. `sql.begin` will resolve with the returned value from the callback function.\n\n`BEGIN` is automatically sent with the optional options, and if anything fails `ROLLBACK` will be called so the connection can be released and execution can continue.\n\n```js\nconst [user, account] = await sql.begin(async sql => {\n  const [user] = await sql`\n    insert into users (\n      name\n    ) values (\n      'Murray'\n    )\n    returning *\n  `\n\n  const [account] = await sql`\n    insert into accounts (\n      user_id\n    ) values (\n      ${ user.user_id }\n    )\n    returning *\n  `\n\n  return [user, account]\n})\n```\n\nDo note that you can often achieve the same result using [`WITH` queries (Common Table Expressions)](https://www.postgresql.org/docs/current/queries-with.html) instead of using transactions.\n\nIt's also possible to pipeline the requests in a transaction if needed by returning an array with queries from the callback function like this:\n\n```js\nconst result = await sql.begin(sql => [\n  sql`update ...`,\n  sql`update ...`,\n  sql`insert ...`\n])\n```\n\n#### SAVEPOINT `await sql.savepoint([name], fn) -> fn()`\n\n```js\nsql.begin('read write', async sql => {\n  const [user] = await sql`\n    insert into users (\n      name\n    ) values (\n      'Murray'\n    )\n  `\n\n  const [account] = (await sql.savepoint(sql =>\n    sql`\n      insert into accounts (\n        user_id\n      ) values (\n        ${ user.user_id }\n      )\n    `\n  ).catch(err => {\n    // Account could not be created. ROLLBACK SAVEPOINT is called because we caught the rejection.\n  })) || []\n\n  return [user, account]\n})\n.then(([user, account]) => {\n  // great success - COMMIT succeeded\n})\n.catch(() => {\n  // not so good - ROLLBACK was called\n})\n```\n\n\n#### PREPARE TRANSACTION `await sql.prepare([name]) -> fn()`\n\nIndicates that the transactions should be prepared using the [`PREPARE TRANSACTION [NAME]`](https://www.postgresql.org/docs/current/sql-prepare-transaction.html) statement\ninstead of being committed.\n\n```js\nsql.begin('read write', async sql => {\n  const [user] = await sql`\n    insert into users (\n      name\n    ) values (\n      'Murray'\n    )\n  `\n\n  await sql.prepare('tx1')\n})\n```\n\n## Data Transformation\n\nPostgres.js allows for transformation of the data passed to or returned from a query by using the `transform` option.\n\nBuilt in transformation functions are:\n\n* For camelCase - `postgres.camel`, `postgres.toCamel`, `postgres.fromCamel`\n* For PascalCase - `postgres.pascal`, `postgres.toPascal`, `postgres.fromPascal`\n* For Kebab-Case - `postgres.kebab`, `postgres.toKebab`, `postgres.fromKebab`\n\nThese built in transformations will only convert to/from snake_case. For example, using `{ transform: postgres.toCamel }` will convert the column names to camelCase only if the column names are in snake_case to begin with. `{ transform: postgres.fromCamel }` will convert camelCase only to snake_case.\n\nBy default, using `postgres.camel`, `postgres.pascal` and `postgres.kebab` will perform a two-way transformation - both the data passed to the query and the data returned by the query will be transformed:\n\n```js\n// Transform the column names to and from camel case\nconst sql = postgres({ transform: postgres.camel })\n\nawait sql`CREATE TABLE IF NOT EXISTS camel_case (a_test INTEGER, b_test TEXT)`\nawait sql`INSERT INTO camel_case ${ sql([{ aTest: 1, bTest: 1 }]) }`\nconst data = await sql`SELECT ${ sql('aTest', 'bTest') } FROM camel_case`\n\nconsole.log(data) // [ { aTest: 1, bTest: '1' } ]\n```\n\nTo only perform half of the transformation (eg. only the transformation **to** or **from** camel case), use the other transformation functions:\n\n```js\n// Transform the column names only to camel case\n// (for the results that are returned from the query)\npostgres({ transform: postgres.toCamel })\n\nawait sql`CREATE TABLE IF NOT EXISTS camel_case (a_test INTEGER)`\nawait sql`INSERT INTO camel_case ${ sql([{ a_test: 1 }]) }`\nconst data = await sql`SELECT a_test FROM camel_case`\n\nconsole.log(data) // [ { aTest: 1 } ]\n```\n\n```js\n// Transform the column names only from camel case\n// (for interpolated inserts, updates, and selects)\nconst sql = postgres({ transform: postgres.fromCamel })\n\nawait sql`CREATE TABLE IF NOT EXISTS camel_case (a_test INTEGER)`\nawait sql`INSERT INTO camel_case ${ sql([{ aTest: 1 }]) }`\nconst data = await sql`SELECT ${ sql('aTest') } FROM camel_case`\n\nconsole.log(data) // [ { a_test: 1 } ]\n```\n\n> Note that Postgres.js does not rewrite the static parts of the tagged template strings. So to transform column names in your queries, the `sql()` helper must be used - eg. `${ sql('columnName') }` as in the examples above.\n\n### Transform `undefined` Values\n\nBy default, Postgres.js will throw the error `UNDEFINED_VALUE: Undefined values are not allowed` when undefined values are passed\n\n```js\n// Transform the column names to and from camel case\nconst sql = postgres({\n  transform: {\n    undefined: null\n  }\n})\n\nawait sql`CREATE TABLE IF NOT EXISTS transform_undefined (a_test INTEGER)`\nawait sql`INSERT INTO transform_undefined ${ sql([{ a_test: undefined }]) }`\nconst data = await sql`SELECT a_test FROM transform_undefined`\n\nconsole.log(data) // [ { a_test: null } ]\n```\n\nTo combine with the built in transform functions, spread the transform in the `transform` object:\n\n```js\n// Transform the column names to and from camel case\nconst sql = postgres({\n  transform: {\n    ...postgres.camel,\n    undefined: null\n  }\n})\n\nawait sql`CREATE TABLE IF NOT EXISTS transform_undefined (a_test INTEGER)`\nawait sql`INSERT INTO transform_undefined ${ sql([{ aTest: undefined }]) }`\nconst data = await sql`SELECT ${ sql('aTest') } FROM transform_undefined`\n\nconsole.log(data) // [ { aTest: null } ]\n```\n\n### Custom Transform Functions\n\nTo specify your own transformation functions, you can use the `column`, `value` and `row` options inside of `transform`, each an object possibly including `to` and `from` keys:\n\n* `to`: The function to transform the outgoing query column name to, i.e `SELECT ${ sql('aName') }` to `SELECT a_name` when using `postgres.toCamel`.\n* `from`: The function to transform the incoming query result column name to, see example below.\n\n> Both parameters are optional, if not provided, the default transformation function will be used.\n\n```js\n// Implement your own functions, look at postgres.toCamel, etc\n// as a reference:\n// https://github.com/porsager/postgres/blob/4241824ffd7aa94ffb482e54ca9f585d9d0a4eea/src/types.js#L310-L328\nfunction transformColumnToDatabase() { /* ... */ }\nfunction transformColumnFromDatabase() { /* ... */ }\n\nconst sql = postgres({\n  transform: {\n    column: {\n      to: transformColumnToDatabase,\n      from: transformColumnFromDatabase,\n    },\n    value: { /* ... */ },\n    row: { /* ... */ }\n  }\n})\n```\n\n## Listen & notify\n\nWhen you call `.listen`, a dedicated connection will be created to ensure that you receive notifications instantly. This connection will be used for any further calls to `.listen`. The connection will automatically reconnect according to a backoff reconnection pattern to not overload the database server.\n\n### Listen `await sql.listen(channel, onnotify, [onlisten]) -> { state }`\n`.listen` takes the channel name, a function to handle each notify, and an optional function to run every time listen is registered and ready (happens on initial connect and reconnects). It returns a promise which resolves once the `LISTEN` query to Postgres completes, or if there is already a listener active.\n\n```js\nawait sql.listen('news', payload => {\n  const json = JSON.parse(payload)\n  console.log(json.this) // logs 'is'\n})\n```\n\nThe optional `onlisten` method is great to use for a very simply queue mechanism:\n\n```js\nawait sql.listen(\n  'jobs',\n  (x) => run(JSON.parse(x)),\n  ( ) => sql`select unfinished_jobs()`.forEach(run)\n)\n\nfunction run(job) {\n  // And here you do the work you please\n}\n```\n### Notify `await sql.notify(channel, payload) -> Result[]`\nNotify can be done as usual in SQL, or by using the `sql.notify` method.\n```js\nsql.notify('news', JSON.stringify({ no: 'this', is: 'news' }))\n```\n\n## Realtime subscribe\n\nPostgres.js implements the logical replication protocol of PostgreSQL to support subscription to real-time updates of `insert`, `update` and `delete` operations.\n\n> **NOTE** To make this work you must [create the proper publications in your database](https://www.postgresql.org/docs/current/sql-createpublication.html), enable logical replication by setting `wal_level = logical` in `postgresql.conf` and connect using either a replication or superuser.\n\n### Quick start\n\n#### Create a publication (eg. in migration)\n```sql\nCREATE PUBLICATION alltables FOR ALL TABLES\n```\n\n#### Subscribe to updates\n```js\nconst sql = postgres({ publications: 'alltables' })\n\nconst { unsubscribe } = await sql.subscribe(\n  'insert:events',\n  (row, { command, relation, key, old }) => {\n    // Callback function for each row change\n    // tell about new event row over eg. websockets or do something else\n  },\n  () => {\n    // Callback on initial connect and potential reconnects\n  }\n)\n```\n\n### Subscribe pattern\n\nYou can subscribe to specific operations, tables, or even rows with primary keys.\n\n#### `operation`      `:` `schema` `.` `table` `=` `primary_key`\n\n**`operation`** is one of ``` * | insert | update | delete ``` and defaults to `*`\n\n**`schema`** defaults to `public`\n\n**`table`** is a specific table name and defaults to `*`\n\n**`primary_key`** can be used to only subscribe to specific rows\n\n### Examples\n\n```js\nsql.subscribe('*',                () => /* everything */ )\nsql.subscribe('insert',           () => /* all inserts */ )\nsql.subscribe('*:users',          () => /* all operations on the public.users table */ )\nsql.subscribe('delete:users',     () => /* all deletes on the public.users table */ )\nsql.subscribe('update:users=1',   () => /* all updates on the users row with a primary key = 1 */ )\n```\n\n## Numbers, bigint, numeric\n\n`Number` in javascript is only able to represent 2<sup>53</sup>-1 safely which means that types in PostgreSQLs like `bigint` and `numeric` won't fit into `Number`.\n\nSince Node.js v10.4 we can use [`BigInt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt) to match the PostgreSQL type `bigint` which is returned for eg. `count(*)`. Unfortunately, it doesn't work with `JSON.stringify` out of the box, so Postgres.js will return it as a string.\n\nIf you want to use `BigInt` you can add this custom type:\n\n```js\nconst sql = postgres({\n  types: {\n    bigint: postgres.BigInt\n  }\n})\n```\n\nThere is currently no guaranteed way to handle `numeric` / `decimal` types in native Javascript. **These [and similar] types will be returned as a `string`**. The best way in this case is to use  [custom types](#custom-types).\n\n## Result Array\n\nThe `Result` Array returned from queries is a custom array allowing for easy destructuring or passing on directly to JSON.stringify or general Array usage. It includes the following properties.\n\n### .count\n\nThe `count` property is the number of affected rows returned by the database. This is useful for insert, update and delete operations to know the number of rows since .length will be 0 in these cases if not using `RETURNING ...`.\n\n### .command\n\nThe `command` run by the query - eg. one of `SELECT`, `UPDATE`, `INSERT`, `DELETE`\n\n### .columns\n\nThe `columns` returned by the query useful to determine types, or map to the result values when using `.values()`\n\n```js\n{\n  name  : String,    // Column name,\n  type  : oid,       // PostgreSQL oid column type\n  parser: Function   // The function used by Postgres.js for parsing\n}\n```\n\n### .statement\n\nThe `statement` contains information about the statement implicitly created by Postgres.js.\n\n```js\n{\n  name    : String,  // The auto generated statement name\n  string  : String,  // The actual query string executed\n  types   : [oid],   // An array of oid expected as input parameters\n  columns : [Column] // Array of columns - same as Result.columns\n}\n```\n\n### .state\n\nThis is the state `{ pid, secret }` of the connection that executed the query.\n\n## Connection details\n\n### All Postgres options\n\n```js\nconst sql = postgres('postgres://username:password@host:port/database', {\n  host                 : '',            // Postgres ip address[es] or domain name[s]\n  port                 : 5432,          // Postgres server port[s]\n  path                 : '',            // unix socket path (usually '/tmp')\n  database             : '',            // Name of database to connect to\n  username             : '',            // Username of database user\n  password             : '',            // Password of database user\n  ssl                  : false,         // true, prefer, require, tls.connect options\n  max                  : 10,            // Max number of connections\n  max_lifetime         : null,          // Max lifetime in seconds (more info below)\n  idle_timeout         : 0,             // Idle connection timeout in seconds\n  connect_timeout      : 30,            // Connect timeout in seconds\n  prepare              : true,          // Automatic creation of prepared statements\n  types                : [],            // Array of custom types, see more below\n  onnotice             : fn,            // Default console.log, set false to silence NOTICE\n  onparameter          : fn,            // (key, value) when server param change\n  debug                : fn,            // Is called with (connection, query, params, types)\n  socket               : fn,            // fn returning custom socket to use\n  transform            : {\n    undefined          : undefined,     // Transforms undefined values (eg. to null)\n    column             : fn,            // Transforms incoming column names\n    value              : fn,            // Transforms incoming row values\n    row                : fn             // Transforms entire rows\n  },\n  connection           : {\n    application_name   : 'postgres.js', // Default application_name\n    ...                                 // Other connection parameters, see https://www.postgresql.org/docs/current/runtime-config-client.html\n  },\n  target_session_attrs : null,          // Use 'read-write' with multiple hosts to\n                                        // ensure only connecting to primary\n  fetch_types          : true,          // Automatically fetches types on connect\n                                        // on initial connection.\n})\n```\n\nNote that `max_lifetime = 60 * (30 + Math.random() * 30)` by default. This resolves to an interval between 30 and 60 minutes to optimize for the benefits of prepared statements **and** working nicely with Linux's OOM killer.\n\n### Dynamic passwords\n\nWhen clients need to use alternative authentication schemes such as access tokens or connections to databases with rotating passwords, provide either a synchronous or asynchronous function that will resolve the dynamic password value at connection time.\n\n```js\nconst sql = postgres(url, {\n  // Other connection config\n  ...\n  // Password function for the database user\n  password : async () => await signer.getAuthToken(),\n})\n```\n\n### SSL\n\nAlthough [vulnerable to MITM attacks](https://security.stackexchange.com/a/229297/174913), a common configuration for the `ssl` option for some cloud providers is to set `rejectUnauthorized` to `false` (if `NODE_ENV` is `production`):\n\n```js\nconst sql =\n  process.env.NODE_ENV === 'production'\n    ? // \"Unless you're using a Private or Shield Heroku Postgres database, Heroku Postgres does not currently support verifiable certificates\"\n      // https://help.heroku.com/3DELT3RK/why-can-t-my-third-party-utility-connect-to-heroku-postgres-with-ssl\n      postgres({ ssl: { rejectUnauthorized: false } })\n    : postgres()\n```\n\nFor more information regarding `ssl` with `postgres`, check out the [Node.js documentation for tls](https://nodejs.org/dist/latest-v16.x/docs/api/tls.html#new-tlstlssocketsocket-options).\n\n\n### Multi-host connections - High Availability (HA)\n\nMultiple connection strings can be passed to `postgres()` in the form of `postgres('postgres://localhost:5432,localhost:5433', ...)`. This works the same as native the `psql` command. Read more at [multiple host URIs](https://www.postgresql.org/docs/13/libpq-connect.html#LIBPQ-MULTIPLE-HOSTS).\n\nConnections will be attempted in order of the specified hosts/ports. On a successful connection, all retries will be reset. This ensures that hosts can come up and down seamlessly.\n\nIf you specify `target_session_attrs: 'primary'` or `PGTARGETSESSIONATTRS=primary` Postgres.js will only connect to the primary host, allowing for zero downtime failovers.\n\n### The Connection Pool\n\nConnections are created lazily once a query is created. This means that simply doing const `sql = postgres(...)` won't have any effect other than instantiating a new `sql` instance.\n\n> No connection will be made until a query is made.\n\nFor example:\n\n```js\nconst sql = postgres() // no connections are opened\n\nawait sql`...` // one connection is now opened\nawait sql`...` // previous opened connection is reused\n\n// two connections are opened now\nawait Promise.all([\n  sql`...`,\n  sql`...`\n])\n```\n\n> When there are high amount of concurrent queries, `postgres` will open as many connections as needed up until `max` number of connections is reached. By default `max` is 10. This can be changed by setting `max` in the `postgres()` call. Example - `postgres('connectionURL', { max: 20 })`.\n\nThis means that we get a much simpler story for error handling and reconnections. Queries will be sent over the wire immediately on the next available connection in the pool. Connections are automatically taken out of the pool if you start a transaction using `sql.begin()`, and automatically returned to the pool once your transaction is done.\n\nAny query which was already sent over the wire will be rejected if the connection is lost. It'll automatically defer to the error handling you have for that query, and since connections are lazy it'll automatically try to reconnect the next time a query is made. The benefit of this is no weird generic \"onerror\" handler that tries to get things back to normal, and also simpler application code since you don't have to handle errors out of context.\n\nThere are no guarantees about queries executing in order unless using a transaction with `sql.begin()` or setting `max: 1`. Of course doing a series of queries, one awaiting the other will work as expected, but that's just due to the nature of js async/promise handling, so it's not necessary for this library to be concerned with ordering.\n\nSince this library automatically creates prepared statements, it also has a default max lifetime for connections to prevent memory bloat on the database itself. This is a random interval for each connection between 45 and 90 minutes. This allows multiple connections to independently come up and down without affecting the service.\n\n### Connection timeout\n\nBy default, connections will not close until `.end()` is called. However, it may be useful to have them close automatically when:\n\n- re-instantiating multiple ` sql`` ` instances\n- using Postgres.js in a Serverless environment (Lambda, etc.)\n- using Postgres.js with a database service that automatically closes connections after some time (see [`ECONNRESET` issue](https://github.com/porsager/postgres/issues/179))\n\nThis can be done using the `idle_timeout` or `max_lifetime` options. These configuration options specify the number of seconds to wait before automatically closing an idle connection and the maximum time a connection can exist, respectively.\n\nFor example, to close a connection that has either been idle for 20 seconds or existed for more than 30 minutes:\n\n```js\nconst sql = postgres({\n  idle_timeout: 20,\n  max_lifetime: 60 * 30\n})\n```\n\n### Cloudflare Workers support\n\nPostgres.js has built-in support for the [TCP socket API](https://developers.cloudflare.com/workers/runtime-apis/tcp-sockets/) in Cloudflare Workers, which is [on-track](https://github.com/wintercg/proposal-sockets-api) to be standardized and adopted in Node.js and other JavaScript runtimes, such as Deno.\n\nYou can use Postgres.js directly in a Worker, or to benefit from connection pooling and query caching, via the [Hyperdrive](https://developers.cloudflare.com/hyperdrive/learning/connect-to-postgres/#driver-examples) service available to Workers by passing the Hyperdrive `connectionString` when creating a new `postgres` client as follows:\n\n```ts\n// Requires Postgres.js 3.4.0 or later\nimport postgres from 'postgres'\n\ninterface Env {\n    HYPERDRIVE: Hyperdrive;\n}\n\nexport default async fetch(req: Request, env: Env, ctx: ExecutionContext) {\n    // The Postgres.js library accepts a connection string directly\n    const sql = postgres(env.HYPERDRIVE.connectionString)\n    const results = await sql`SELECT * FROM users LIMIT 10`\n    return Response.json(results)\n}\n```\n\nIn `wrangler.toml` you will need to enable the `nodejs_compat` compatibility flag to allow Postgres.js to operate in the Workers environment:\n\n```toml\ncompatibility_flags = [\"nodejs_compat\"]\n```\n\n### Auto fetching of array types\n\nPostgres.js will automatically fetch table/array-type information when it first connects to a database.\n\nIf you have revoked access to `pg_catalog` this feature will no longer work and will need to be disabled.\n\nYou can disable this feature by setting `fetch_types` to `false`.\n\n### Environmental variables\n\nIt is also possible to connect to the database without a connection string or any options. Postgres.js will fall back to the common environment variables used by `psql` as in the table below:\n\n```js\nconst sql = postgres()\n```\n\n| Option             | Environment Variables    |\n| ------------------ | ------------------------ |\n| `host`             | `PGHOST`                 |\n| `port`             | `PGPORT`                 |\n| `database`         | `PGDATABASE`             |\n| `username`         | `PGUSERNAME` or `PGUSER` |\n| `password`         | `PGPASSWORD`             |\n| `application_name` | `PGAPPNAME`              |\n| `idle_timeout`     | `PGIDLE_TIMEOUT`         |\n| `connect_timeout`  | `PGCONNECT_TIMEOUT`      |\n\n### Prepared statements\n\nPrepared statements will automatically be created for any queries where it can be inferred that the query is static. This can be disabled by using the `prepare: false` option. For instance — this is useful when [using PGBouncer in `transaction mode`](https://github.com/porsager/postgres/issues/93#issuecomment-656290493).\n\n**update**: [since 1.21.0](https://www.pgbouncer.org/2023/10/pgbouncer-1-21-0)\nPGBouncer supports protocol-level named prepared statements when [configured\nproperly](https://www.pgbouncer.org/config.html#max_prepared_statements)\n\n## Custom Types\n\nYou can add ergonomic support for custom types, or simply use `sql.typed(value, type)` inline, where type is the PostgreSQL `oid` for the type and the correctly serialized string. _(`oid` values for types can be found in the `pg_catalog.pg_type` table.)_\n\nAdding Query helpers is the cleanest approach which can be done like this:\n\n```js\nconst sql = postgres({\n  types: {\n    rect: {\n      // The pg_types oid to pass to the db along with the serialized value.\n      to        : 1337,\n\n      // An array of pg_types oids to handle when parsing values coming from the db.\n      from      : [1337],\n\n      //Function that transform values before sending them to the db.\n      serialize : ({ x, y, width, height }) => [x, y, width, height],\n\n      // Function that transforms values coming from the db.\n      parse     : ([x, y, width, height]) => { x, y, width, height }\n    }\n  }\n})\n\n// Now you can use sql.typed.rect() as specified above\nconst [custom] = await sql`\n  insert into rectangles (\n    name,\n    rect\n  ) values (\n    'wat',\n    ${ sql.typed.rect({ x: 13, y: 37, width: 42, height: 80 }) }\n  )\n  returning *\n`\n\n// custom = { name: 'wat', rect: { x: 13, y: 37, width: 42, height: 80 } }\n\n```\n\n### Custom socket\n\nEasily do in-process ssh tunneling to your database by providing a custom socket for Postgres.js to use. The function (optionally async) must return a socket-like duplex stream.\n\nHere's a sample using [ssh2](https://github.com/mscdex/ssh2)\n\n```js\nimport ssh2 from 'ssh2'\n\nconst sql = postgres({\n  ...options,\n  socket: ({ host: [host], port: [port] }) => new Promise((resolve, reject) => {\n    const ssh = new ssh2.Client()\n    ssh\n    .on('error', reject)\n    .on('ready', () =>\n      ssh.forwardOut('127.0.0.1', 12345, host, port,\n        (err, socket) => err ? reject(err) : resolve(socket)\n      )\n    )\n    .connect(sshOptions)\n  })\n})\n```\n\n## Teardown / Cleanup\n\nTo ensure proper teardown and cleanup on server restarts use `await sql.end()` before `process.exit()`.\n\nCalling `sql.end()` will reject new queries and return a Promise which resolves when all queries are finished and the underlying connections are closed. If a `{ timeout }` option is provided any pending queries will be rejected once the timeout (in seconds) is reached and the connections will be destroyed.\n\n#### Sample shutdown using [Prexit](https://github.com/porsager/prexit)\n\n```js\nimport prexit from 'prexit'\n\nprexit(async () => {\n  await sql.end({ timeout: 5 })\n  await new Promise(r => server.close(r))\n})\n```\n\n## Reserving connections\n\n### `await sql.reserve()`\n\nThe `reserve` method pulls out a connection from the pool, and returns a client that wraps the single connection. This can be used for running queries on an isolated connection.\n\n```ts\nconst reserved = await sql.reserve()\nawait reserved`select * from users`\nawait reserved.release()\n```\n\n### `reserved.release()`\n\nOnce you have finished with the reserved connection, call `release` to add it back to the pool.\n\n## Error handling\n\nErrors are all thrown to related queries and never globally. Errors coming from database itself are always in the [native Postgres format](https://www.postgresql.org/docs/current/errcodes-appendix.html), and the same goes for any [Node.js errors](https://nodejs.org/api/errors.html#errors_common_system_errors) eg. coming from the underlying connection.\n\nQuery errors will contain a stored error with the origin of the query to aid in tracing errors.\n\nQuery errors will also contain the `query` string and the `parameters`. These are not enumerable to avoid accidentally leaking confidential information in logs. To log these it is required to specifically access `error.query` and `error.parameters`, or set `debug: true` in options.\n\nThere are also the following errors specifically for this library.\n\n##### UNSAFE_TRANSACTION\n> Only use sql.begin or max: 1\n\nTo ensure statements in a transaction runs on the same connection (which is required for them to run inside the transaction), you must use [`sql.begin(...)`](#transactions) or only allow a single connection in options (`max: 1`).\n\n##### UNDEFINED_VALUE\n> Undefined values are not allowed\n\nPostgres.js won't accept `undefined` as values in tagged template queries since it becomes ambiguous what to do with the value. If you want to set something to null, use `null` explicitly.\n\n##### MESSAGE_NOT_SUPPORTED\n> X (X) is not supported\n\nWhenever a message is received from Postgres which is not supported by this library. Feel free to file an issue if you think something is missing.\n\n##### MAX_PARAMETERS_EXCEEDED\n> Max number of parameters (65534) exceeded\n\nThe postgres protocol doesn't allow more than 65534 (16bit) parameters. If you run into this issue there are various workarounds such as using `sql([...])` to escape values instead of passing them as parameters.\n\n##### SASL_SIGNATURE_MISMATCH\n> Message type X not supported\n\nWhen using SASL authentication the server responds with a signature at the end of the authentication flow which needs to match the one on the client. This is to avoid [man-in-the-middle attacks](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). If you receive this error the connection was canceled because the server did not reply with the expected signature.\n\n##### NOT_TAGGED_CALL\n> Query not called as a tagged template literal\n\nMaking queries has to be done using the sql function as a [tagged template](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates). This is to ensure parameters are serialized and passed to Postgres as query parameters with correct types and to avoid SQL injection.\n\n##### AUTH_TYPE_NOT_IMPLEMENTED\n> Auth type X not implemented\n\nPostgres supports many different authentication types. This one is not supported.\n\n##### CONNECTION_CLOSED\n> write CONNECTION_CLOSED host:port\n\nThis error is thrown if the connection was closed without an error. This should not happen during normal operations, so please create an issue if this was unexpected.\n\n##### CONNECTION_ENDED\n> write CONNECTION_ENDED host:port\n\nThis error is thrown if the user has called [`sql.end()`](#teardown--cleanup) and performed a query afterward.\n\n##### CONNECTION_DESTROYED\n> write CONNECTION_DESTROYED host:port\n\nThis error is thrown for any queries that were pending when the timeout to [`sql.end({ timeout: X })`](#teardown--cleanup) was reached.\n\n##### CONNECT_TIMEOUT\n> write CONNECT_TIMEOUT host:port\n\nThis error is thrown if the startup phase of the connection (tcp, protocol negotiation, and auth) took more than the default 30 seconds or what was specified using `connect_timeout` or `PGCONNECT_TIMEOUT`.\n\n## TypeScript support\n\n`postgres` has TypeScript support. You can pass a row list type for your queries in this way:\n```ts\ninterface User {\n  id: number\n  name: string\n}\n\nconst users = await sql<User[]>`SELECT * FROM users`\nusers[0].id // ok => number\nusers[1].name // ok => string\nusers[0].invalid // fails: `invalid` does not exists on `User`\n```\n\nHowever, be sure to check the array length to avoid accessing properties of `undefined` rows:\n```ts\nconst users = await sql<User[]>`SELECT * FROM users WHERE id = ${id}`\nif (!users.length)\n  throw new Error('Not found')\nreturn users[0]\n```\n\nYou can also prefer destructuring when you only care about a fixed number of rows.\nIn this case, we recommend you to prefer using tuples to handle `undefined` properly:\n```ts\nconst [user]: [User?] = await sql`SELECT * FROM users WHERE id = ${id}`\nif (!user) // => User | undefined\n  throw new Error('Not found')\nreturn user // => User\n\n// NOTE:\nconst [first, second]: [User?] = await sql`SELECT * FROM users WHERE id = ${id}` // fails: `second` does not exist on `[User?]`\nconst [first, second] = await sql<[User?]>`SELECT * FROM users WHERE id = ${id}` // don't fail : `second: User | undefined`\n```\n\nWe do our best to type all the public API, however types are not always updated when features are added or changed. Feel free to open an issue if you have trouble with types.\n\n## Migration tools\n\nPostgres.js doesn't come with any migration solution since it's way out of scope, but here are some modules that support Postgres.js for migrations:\n\n- https://github.com/porsager/postgres-shift\n- https://github.com/lukeed/ley\n- https://github.com/JAForbes/pgmg\n\n## Thank you\n\nA really big thank you to [@JAForbes](https://twitter.com/jmsfbs) who introduced me to Postgres and still holds my hand navigating all the great opportunities we have.\n\nThanks to [@ACXgit](https://twitter.com/andreacoiutti) for initial tests and dogfooding.\n\nAlso thanks to [Ryan Dahl](https://github.com/ry) for letting me have the `postgres` npm package name.\n","readmeFilename":"README.md","users":{"flumpus-dev":true}}